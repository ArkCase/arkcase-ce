
- name: create minio group
  become: yes
  group:
    name: minio
    state: present

- name: create minio user
  become: yes
  user:
    name: minio
    group: minio
    shell: /sbin/nologin
    home: /home/minio

- name: create minio folders
  become: yes
  file:
    path: "{{root_folder}}/{{ item }}/minio/"
    state: directory
    owner: minio
  with_items:
    - "app"
    - "data"
    - "log"
    - "tmp"

- name: ensure minio port
  become: yes
  firewalld:
    immediate: yes
    permanent: yes
    port: "{{ minio_port | default(9000) }}/tcp"
    state: enabled

- name: ensure minio console port
  become: yes
  firewalld:
    immediate: yes
    permanent: yes
    port: "{{ minio_console_port | default(8001) }}/tcp"
    state: enabled

- name: download minio file from internet
  include_tasks: "{{ role_path }}/../common/tasks/download.yml"
  loop:
   - name: minio
     dest: "{{root_folder}}/app/minio/minio"
     owner: minio
     url: "https://dl.minio.io/server/minio/release/linux-amd64/minio"

- name: change minio file permission
  become: yes
  file:
   path: "{{root_folder}}/app/minio/minio"
   state: file
   owner: minio
   group: minio
   mode: "0777"
   setype: bin_t

- name: create minio config file
  become: yes
  become_user: minio
  copy:
    dest: "{{root_folder}}/app/minio/minio.conf"
    content: |
     MINIO_VOLUMES="{{root_folder}}/data/minio"
     MINIO_OPTS="--console-address :{{ minio_console_port | default(8001) }} --certs-dir={{ root_folder }}/app/minio"

- name: copy the private key
  become: yes
  ansible.builtin.copy:
    src: "{{ ssl_key }}"
    dest: "{{ root_folder }}/app/minio/private.key"
    owner: minio
    group: minio
    mode: 0600

- name: copy the certificate
  become: yes
  ansible.builtin.copy:
    src: "{{ ssl_cert }}"
    dest: "{{ root_folder }}/app/minio/public.crt"
    owner: minio
    group: minio

- name: create systemd file
  become: yes
  template:
    backup: yes
    src: "minio.service"
    dest: /etc/systemd/system/minio.service

- name: fapolicy settings for MinIO, if fapolicyd is installed
  include_tasks: "{{ role_path }}/../fapolicyd/tasks/main.yml"
  loop:
    - name: minio
      folder_path: "{{ root_folder }}/app/minio"

- name: enable minio service
  become: yes
  systemd:
    name: minio
    enabled: yes
    masked: no
    daemon_reload: yes

- name: start minio
  become: yes
  systemd:
    name: minio
    state: started
 

- name: update startup script
  become: yes
  become_user: solr
  replace:
    path: "{{ root_folder }}/app/solr/bin/init.d/solr"
    regexp: "{{ item.regexp }}"
    replace: "{{ item.replace }}"
  loop:
    # hard coded to /opt/solr, don't change below setting
    - regexp: "/opt/solr"
      replace: "{{ root_folder }}/app/solr"
    - regexp: "/etc/default/solr.in.sh"
      replace: "{{ root_folder }}/app/solr/bin/solr.in.sh"

- name: update environment file - basics
  become: yes
  become_user: solr
  blockinfile:
    path: "{{ root_folder }}/app/solr/bin/solr.in.sh"
    insertbefore: EOF
    marker: "# {mark} ANSIBLE MANAGED BLOCK - BASICS"
    block: |
      SOLR_OPTS="$SOLR_OPTS -Dsolr.autoSoftCommit.maxTime=1000 -Dsolr.jetty.host=0.0.0.0 -Djava.net.preferIPv4Stack=true"
      SOLR_DATA_HOME={{ root_folder }}/data/solr
      SOLR_LOGS_DIR={{ root_folder }}/log/solr
      SOLR_LOG_LEVEL=INFO
      SOLR_HOST={{ solr_host }}
      SOLR_PORT={{ solr_port }}

- name: update environment file - jmx enabled
  become: yes
  become_user: solr
  blockinfile:
    path: "{{ root_folder }}/app/solr/bin/solr.in.sh"
    insertbefore: EOF
    marker: "# {mark} ANSIBLE MANAGED BLOCK - JMX"
    block: |
      SOLR_OPTS="$SOLR_OPTS -Dcom.sun.management.jmxremote -Dcom.sun.management.jmxremote.local.only=false -Dcom.sun.management.jmxremote.ssl=true -Dcom.sun.management.jmxremote.authenticate=true -Dcom.sun.management.jmxremote.port=50502 -Dcom.sun.management.jmxremote.rmi.port=50503 -Dcom.sun.management.jmxremote.access.file={{ root_folder }}/app/solr/access.file -Dcom.sun.management.jmxremote.password.file={{ root_folder }}/app/solr/password.file -Djava.rmi.server.hostname={{ internal_host }}"
  when: solr_jmx_enabled|bool

- name: update environment file - TLS
  become: yes
  become_user: solr
  blockinfile:
    path: "{{ root_folder }}/app/solr/bin/solr.in.sh"
    insertbefore: EOF
    marker: "# {mark} ANSIBLE MANAGED BLOCK - TLS"
    block: |
      SOLR_SSL_ENABLED=true
      SOLR_SSL_KEY_STORE={{ java_key_store_jks }}
      SOLR_SSL_KEY_STORE_PASSWORD={{ java_key_store_pass }}
      SOLR_SSL_TRUST_STORE={{ java_trust_store }}
      SOLR_SSL_TRUST_STORE_PASSWORD={{ java_trust_store_pass }}
      SOLR_SSL_TRUST_STORE_TYPE=JKS
      SOLR_SSL_KEY_STORE_TYPE=JKS
      SOLR_SSL_NEED_CLIENT_AUTH=false
      SOLR_SSL_WANT_CLIENT_AUTH=false
      SOLR_OPTS="$SOLR_OPTS -Djavax.net.ssl.keyStorePassword={{ ansible_facts.fqdn }} -Djavax.net.ssl.trustStorePassword={{ ansible_facts.fqdn }}"

# NOTE, per https://lucene.apache.org/solr/guide/7_7/taking-solr-to-production.html#taking-solr-to-production, 
# setting ZK_HOST is sufficient to start Solr in Solr Cloud mode
- name: Solr cloud, if configured
  become: yes
  become_user: solr
  blockinfile:
    path: "{{ root_folder }}/app/solr/bin/solr.in.sh"
    insertbefore: EOF
    marker: "# {mark} ANSIBLE MANAGED BLOCK - SOLR CLOUD"
    block: |
      ZK_HOST={{ solr_node_1 }},{{ solr_node_2 }},{{ solr_node_3 }}
  when: enable_solr_cloud is defined and enable_solr_cloud

- name: configure Solr to use TLS with Zookeeper, if Solr Cloud is enabled
  become: yes
  become_user: solr
  command: "{{ root_folder }}/app/solr/server/scripts/cloud-scripts/zkcli.sh -zkhost localhost:2181 -cmd clusterprop -name urlScheme -val https"
  when: enable_solr_cloud is defined and enable_solr_cloud

- name: Solr logrotate
  become: yes
  template:
    src: solr
    dest: /etc/logrotate.d/solr

- name: Solr systemd unit file
  become: yes
  template:
    src: solr.service
    dest: /etc/systemd/system/solr.service
  register: systemd_solr_updated

- name: reload daemon files if needed
  become: yes
  command: systemctl daemon-reload
  when: systemd_solr_updated is changed
    
- name: enable Solr to start on boot
  become: yes
  systemd:
    name: solr
    enabled: yes
    masked: no


- name: check for available disk space
  become: yes
  command: df -h "{{ root_folder }}/"
  register: space_available

- name: check for solr data space
  become: yes
  stat:
    path:  "{{ root_folder }}/data/solr"
  register: solr_data

- name: upgrade and backup solr if space is available under root_folder
  block: 
    - name: stop arkcase
      become: yes
      systemd:
        name: arkcase
        state: stopped

    - name: copy existing solr data to backup folder
      become: yes
      copy:
        remote_src: yes
        src: "{{ root_folder }}/data/solr/"
        dest: "{{ root_folder }}/data/solr_backup/"
        owner: solr
        group: solr

    - name: delete solr cores from previous install
      command: "{{ root_folder }}/app/solr/bin/solr delete -c {{ item }}"
      loop: "{{ solr_cores }}"

    - name: stop solr
      become: yes
      systemd:
        name: solr
        state: stopped

    - name: Remove solr config files and folders
      become: yes
      file:
        path: "{{ item }}"
        state: absent
        group: solr
        owner: solr
      loop:
        - "{{ root_folder }}/data/solr"
        - "{{ root_folder }}/app/solr"
        - "{{ root_folder }}/install/solr"
        - "/etc/systemd/system/solr.service"

    - name: install solr
      include_role: 
        name: solr

    - name: remove solr default data folder after upgrade
      become: yes 
      shell: rm -rf {{ root_folder }}/data/solr/*

    - name: copy backup dir to new solr data dir
      become: yes
      copy:
        remote_src: yes
        src: "{{ root_folder }}/data/solr_backup/"
        dest: "{{ root_folder }}/data/solr/"
        owner: solr
        group: solr

    - name: restart service solr
      become: yes
      systemd:
        daemon_reload: true
        name: solr
        state: restarted
      
    - name: make sure solr is available
      become: yes
      uri:
        validate_certs: false
        url: https://{{ solr_host }}:8983/solr/
        follow_redirects: none
      register: _result
      retries: 10
      delay: 5
      ignore_errors: yes

    - name: start service arkcase
      become: yes
      systemd:
        name: arkcase
        state: started
      when: _result.status == 200
  when: solr_data < space_available

- name: output if there is not space available
  become: yes
  debug:
    msg: "There is no space available under {{ root_folder }}"
  when: solr_data > space_available
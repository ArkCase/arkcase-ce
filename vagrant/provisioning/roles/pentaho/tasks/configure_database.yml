- name: database configuration templates
  become: yes
  become_user: pentaho
  template:
    backup: yes
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
  loop:
    - src: repository.xml
      dest: /opt/app/pentaho/pentaho-server/pentaho-solutions/system/jackrabbit/repository.xml
    - src: context.xml
      dest: /opt/app/pentaho/pentaho-server/tomcat/webapps/pentaho/META-INF/context.xml
    - src: mysql5.hibernate.cfg.xml
      dest: /opt/app/pentaho/pentaho-server/pentaho-solutions/system/hibernate/mysql5.hibernate.cfg.xml

- name: database configuration files
  become: yes
  become_user: pentaho
  copy:
    backup: yes
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
  loop:
    - src: quartz.properties
      dest: /opt/app/pentaho/pentaho-server/pentaho-solutions/system/quartz/
    - src: hibernate-settings.xml
      dest: /opt/app/pentaho/pentaho-server/pentaho-solutions/system/hibernate/
    - src: activemq.xml
      dest: /opt/app/pentaho/pentaho-server/pentaho-solutions/system/karaf/etc/

- name: copy audit_sql.xml (local file)
  become: yes
  become_user: pentaho
  copy:
    backup: yes
    remote_src: yes
    src: /opt/app/pentaho/pentaho-server/pentaho-solutions/system/dialects/mysql5/audit_sql.xml
    dest: /opt/app/pentaho/pentaho-server/pentaho-solutions/system/

- name: add resource-refs to web.xml
  become: yes
  become_user: pentaho
  blockinfile:
    backup: yes
    path: /opt/app/pentaho/pentaho-server/tomcat/webapps/pentaho/WEB-INF/web.xml
    insertafter: "insert additional resource-refs"
    marker: "<!-- {mark} ANSIBLE MANAGED RESOURCE REFS -->"
    content: |
      <resource-ref>
        <description>acm3DataSource</description>
        <res-ref-name>jdbc/acm3DataSource</res-ref-name>
        <res-type>javax.sql.DataSource</res-type>
        <res-auth>Container</res-auth>
      </resource-ref>

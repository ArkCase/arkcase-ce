- name: Expose Microservices ports
  become: yes
  firewalld:
    port: "{{ item }}"
    permanent: true
    state: enabled
    immediate: yes
  register: microservices_ports
  loop:
    - "{{ kafka_port | default(9092) }}/tcp"   # Kafka

# CentOS 7 ships with HTTPD version 2.4.6. We need at least version 2.4.11 for the SubstituteMaxLineLength directive
- name: Copy the HTTPD CodeIT repo
  template:
    src: codeit.el7.repo
    dest: /etc/yum.repos.d/
    backup: yes

- name: upgrade httpd
  become: yes
  yum:
    state: latest
    name:
      - httpd
  register: httpd_upgrade

- name: Populate control-center context, if needed
  become: yes
  blockinfile:
    backup: yes
    marker: "# {mark} ANSIBLE MANAGED BLOCK CONTROL-CENTER CONTEXT"
    insertbefore: "</VirtualHost>"
    path: "/etc/httpd/conf.d/ssl.conf"
    block: |
      ProxyPass /control-center http://{{ internal_host }}:9021
      ProxyPassReverse /control-center http://{{ internal_host }}:9021
      <Location "/control-center">
        AddOutputFilterByType INFLATE;SUBSTITUTE;DEFLATE text/html
        AddOutputFilterByType INFLATE;SUBSTITUTE;DEFLATE application/javascript
        SubstituteMaxLineLength 10M
        Substitute "s|/dist/|/control-center/dist/|i"
        Substitute "s|/2.0/|/control-center/2.0/|i"
        Substitute "s|/3.0/|/control-center/3.0/|i"
        Substitute "s|/api/|/control-center/api/|i"
        Substitute "s|{{ internal_host }}/clusters/|{{ internal_host }}/control-center/clusters/|i"
      </Location>
  when: enable_kafka is defined and enable_kafka == "yes"
  register: control_center_httpd 

- name: replace original '00-base.conf' file with upgraded one to prevent conflict during start
  copy:
  remote_src: yes
  force: yes
  backup: yes
    src: /etc/httpd/conf.modules.d/00-base.conf.rpmnew
    dest: /etc/httpd/conf.modules.d/00-base.conf
  when: httpd_upgrade is changed or control_center_httpd is changed

- name: name restart HTTPD
  become: yes
  systemd:
    name: "httpd"
    state: restarted
  when: httpd_upgrade is changed or control_center_httpd is changed

- name: Create zipkin user
  become: yes
  user:
    name: zipkin
    shell: /bin/false
    state: present
    create_home: yes
    home: /home/zipkin

- name: Create zipkin directories
  become: yes
  file:
    path: "{{ item }}"
    state: directory
    group: zipkin
    owner: zipkin
  loop:

    - "{{ root_folder }}/app/zipkin"
    - "{{ root_folder }}/install/zipkin"
  register: zipkin_folder_structure

- include_tasks: "{{ role_path }}/../common/tasks/download.yml"
  loop:
    - name: "Zipkin"
      dest: "{{ root_folder }}/install/zipkin/zipkin-server-{{ zipkin_version }}.jar"
      owner: "zipkin"
      url: "https://search.maven.org/remote_content?g=io.zipkin&a=zipkin-server&v={{ zipkin_version }}&c=exec"

- name: copy Zipkin jar file
  become: yes
  become_user: zipkin
  copy:
    remote_src: yes
    src: "{{ root_folder }}/install/zipkin/zipkin-server-{{ zipkin_version }}.jar"
    dest: "{{ root_folder }}/app/zipkin/"

- name: ensure Zipkin jar is executable
  become: yes
  become_user: zipkin
  file:
    path: "{{ root_folder }}/app/zipkin/zipkin-server-{{ zipkin_version }}.jar"
    mode: "u=rwx,g=r,o=r"

- name: copy Zipkin systemd unit file
  become: yes
  template:
    src: "zipkin.service"
    dest: "/etc/systemd/system/zipkin.service"

- name: enable Zipkin
  become: yes
  systemd:
    daemon_reload: yes
    name: zipkin
    enabled: yes
    masked: no
    state: started

- name: create arkcase_process database schema
  include_tasks: "{{ role_path }}/../mariadb/tasks/create_schema.yml"
  loop:
    - arkcase_process    

- name: configure MariaDB v10 repository
  become: yes
  copy:
    dest: /etc/yum.repos.d/mariadb.repo
    force: no
    content: |
      # MariaDB 10.4 CentOS repository list - created 2019-01-09 21:49 UTC
      # http://downloads.mariadb.org/mariadb/repositories/
      [mariadb]
      name = MariaDB
      baseurl = http://yum.mariadb.org/10.4/centos7-amd64
      gpgkey=https://yum.mariadb.org/RPM-GPG-KEY-MariaDB
      gpgcheck=1

- name: install MariaDB packages
  become: yes
  yum:
    state: installed
    disable_gpg_check: yes
    name:
      - MariaDB-server
      - MariaDB-client
      - MySQL-python
  register: mariadb_install

- include_tasks: "{{ role_path }}/../common/tasks/download.yml"
  loop:
    - name: "MariaDB JDBC Driver"
      dest: "{{ root_folder }}/common/mariadb-java-client-{{ mariadb_jdbc_version }}.jar"
      owner: "root"
      url: "https://downloads.mariadb.com/Connectors/java/connector-java-{{ mariadb_jdbc_version }}/mariadb-java-client-{{ mariadb_jdbc_version }}.jar"

- name: MariaDB folders
  become: yes
  file:
    path: "{{ item.name }}"
    state: directory
    group: mysql
    owner: mysql
    setype: "{{ item.setype }}"
  loop:
    - name: "{{ mariadb_data_folder }}"
      setype: "mysqld_db_t"
    - name: "{{ mariadb_log_folder }}"
      setype: "mysqld_log_t"
  register: mariadb_folder_structure

- name: copy private keys for mariadb use
  become: yes
  copy: 
    remote_src: yes
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    owner: mysql
    group: mysql
    mode: 0600
  loop:
    - src: "{{ ssl_key_rsa }}"
      dest: "{{ mariadb_data_folder }}/mysql.server.key"
    - src: "{{ client_ssl_key_rsa }}"
      dest: "{{ mariadb_data_folder }}/mysql.client.key"

- name: update server config file
  become: yes
  block:
    - name: read server.cnf
      shell: cat /etc/my.cnf.d/server.cnf
      register: server_cnf_contents
      changed_when: false
    - name: update server.cnf TLS properties, if needed
      lineinfile:
        path: /etc/my.cnf.d/server.cnf
        state: present
        insertafter: "\\[mysqld\\]"
        line: "{{ item }}"
      loop:
        - "ssl-cipher={{ ssl_cipher }}"
        - "ssl-cert={{ ssl_cert }}"
        - "ssl-key={{ mariadb_data_folder }}/mysql.server.key"
        - "ssl-ca={{ ssl_ca }}"
      when: server_cnf_contents.stdout.find('ssl-cipher=' ~ ssl_cipher) == -1
      register: server_cnf_tls
    - name: update server.cnf max_packet property, if needed (Pentaho needs larger packet size)
      lineinfile:
        path: /etc/my.cnf.d/server.cnf
        state: present
        insertafter: "\\[mysqld\\]"
        line: "max_allowed_packet=1024M"
      when: server_cnf_contents.stdout.find('max_allowed_packet') == -1
      register: server_cnf_packet
    - name: network connection properties
      lineinfile:
        path: /etc/my.cnf.d/server.cnf
        state: present
        regexp: "^{{ item }}$"
        insertafter: "\\[mysqld\\]"
        line: "{{ item }}"
      when: not server_cnf_contents.stdout is match('^' + item)
      register: server_cnf_network
      loop:
        - "skip-name-resolve=true"
        - "bind-address=0.0.0.0"
    - name: read client.cnf
      shell: cat /etc/my.cnf.d/mysql-clients.cnf
      register: client_cnf_contents
      changed_when: false
      when: client_ssl_cert != ""
    - name: update client.cnf if needed
      lineinfile:
        path: /etc/my.cnf.d/mysql-clients.cnf
        state: present
        insertafter: "\\[mysql\\]"
        line: "{{ item }}"
      loop:
        - "ssl-cert={{ client_ssl_cert }}"
        - "ssl-key={{ mariadb_data_folder }}/mysql.client.key"
        - "ssl-ca={{ client_ssl_ca }}"
        - "socket={{ mariadb_data_folder }}/mysql.sock"
      when: client_ssl_cert != "" and client_cnf_contents.stdout.find('arkcase-client') == -1
      register: client_cnf

- name: set data folder
  become: yes
  lineinfile:
    path: /etc/my.cnf.d/server.cnf
    insertafter: "\\[mysqld\\]"
    regexp: '^datadir='
    line: 'datadir={{ mariadb_data_folder }}'

- name: set log folder
  become: yes
  lineinfile:
    path: /etc/my.cnf.d/server.cnf
    insertafter: "\\[mysqld\\]"
    regexp: '^log-error='
    line: 'log-error={{ mariadb_log_folder }}/mariadb.log'

- name: set socket path
  become: yes
  lineinfile:
    path: /etc/my.cnf.d/server.cnf
    insertafter: "\\[mysqld\\]"
    regexp: '^socket='
    line: 'socket={{ mariadb_data_folder}}/mysql.sock'

- name: mariadb logrotate
  become: yes
  template:
    src: logrotate.d/mariadb
    dest: /etc/logrotate.d/mariadb

- name: initialize database structures if needed
  become: yes
  become_user: mysql
  command: mysql_install_db
  args:
    chdir: "{{ mariadb_data_folder }}"
    creates: "{{ mariadb_data_folder }}/mysql/"

- name: enable MariaDB to start on boot
  become: yes
  systemd:
    name: mariadb
    enabled: yes
    masked: no

- name: start MariaDB
  become: yes
  systemd:
    name: mariadb
    state: restarted
  when: server_cnf_tls is changed or server_cnf_packet is changed or client_cnf is changed or mariadb_install is changed or server_cnf_network is changed
    

- name: configure MariaDB v10 repository (CentOS 7)
  become: yes
  copy:
    dest: /etc/yum.repos.d/mariadb.repo
    force: no
    content: |
      # MariaDB 10.4 CentOS repository list - created 2019-01-09 21:49 UTC
      # http://downloads.mariadb.org/mariadb/repositories/
      [mariadb]
      name = MariaDB
      baseurl = http://yum.mariadb.org/10.4/centos7-amd64
      gpgkey=https://yum.mariadb.org/RPM-GPG-KEY-MariaDB
      gpgcheck=1
  when: ansible_distribution == "CentOS" and ansible_distribution_major_version == "7"

- name: configure MariaDB v10 repository (RHEL 8)
  become: yes
  copy:
    dest: /etc/yum.repos.d/mariadb.repo
    force: no
    content: |
      [mariadb]
      name = MariaDB
      baseurl = https://rpm.mariadb.org/10.4/rhel/$releasever/$basearch
      gpgkey= https://rpm.mariadb.org/RPM-GPG-KEY-MariaDB
      gpgcheck=1
  when: ansible_distribution == "RedHat" and ansible_distribution_major_version == "8"

- name: configure MariaDB v10 repository (RHEL 8)
  become: yes
  copy:
    dest: /etc/yum.repos.d/mariadb.repo
    force: no
    content: |
      # MariaDB 10.4 RedHat repository list - created  2022-01-07
      # https://mariadb.org/download/
      [mariadb]
      name = MariaDB
      baseurl = http://yum.mariadb.org/10.6/rhel8-amd64
      module_hotfixes=1
      gpgkey=https://yum.mariadb.org/RPM-GPG-KEY-MariaDB
      gpgcheck=1
  when: ansible_distribution == "Rocky" and ansible_distribution_major_version == "8"

- name: MySQL python package name (CentOS 7)
  set_fact:
    pkg_mysql_python: MySQL-python
  when: ansible_distribution == "CentOS" and ansible_distribution_major_version == "7"

- name: MySQL python package name (RHEL 8)
  set_fact:
    pkg_mysql_python: python3-mysql
  when: (ansible_distribution == "RedHat" or ansible_distribution == "Rocky") and ansible_distribution_major_version == "8"

#needed to remove mariadb.repo in order to install python3-mysql
#needed to remove mariadb.repo and install old fashioned yum install mariadb-server
#there is NO MariaDB-client package for rocky. TRY: yum search mariadb-client
#consider this in mariadb.repo(without deleting mariadb.repo or doing anything else): 
  #baseurl = http://yum.mariadb.org/10.6/rhel8-amd64
  #gpgkey=https://yum.mariadb.org/RPM-GPG-KEY-MariaDB
- name: MySQL python package name (RHEL 8.8)
  set_fact:
    pkg_mysql_python: python3-PyMySQL
  when: ansible_distribution == "RedHat" and ansible_distribution_major_version == "8" and ansible_distribution_version is match("8.8*")

- name: install MariaDB packages (CentOS 7)
  become: yes
  yum:
    state: installed
    disable_gpg_check: yes
    name:
      - MariaDB-server
      - MariaDB-client
  register: mariadb_install
  when: ansible_distribution == "CentOS" and ansible_distribution_major_version == "7"

- name: install MariaDB packages (RHEL 8)
  become: yes
  yum:
    state: installed
    disable_gpg_check: yes
    enablerepo: mariadb
    disablerepo: rhel-8-for-x86_64-appstream-rpms
    name:
      - MariaDB-server
      - MariaDB-client
  register: mariadb_install
  when: ansible_distribution == "RedHat" and ansible_distribution_major_version == "8"

- name: install MariaDB python library
  become: yes
  yum:
    state: installed
    disable_gpg_check: yes
    name:
      - "{{ pkg_mysql_python }}"


- include_tasks: "{{ role_path }}/../common/tasks/download.yml"
  loop:
    - name: "MariaDB JDBC Driver"
      dest: "{{ root_folder }}/common/mariadb-java-client-{{ mariadb_jdbc_version }}.jar"
      owner: "root"
      url: "https://downloads.mariadb.com/Connectors/java/connector-java-{{ mariadb_jdbc_version }}/mariadb-java-client-{{ mariadb_jdbc_version }}.jar"

- name: MariaDB folders
  become: yes
  file:
    path: "{{ item.name }}"
    state: directory
    group: mysql
    owner: mysql
    setype: "{{ item.setype }}"
  loop:
    - name: "{{ mariadb_data_folder }}"
      setype: "mysqld_db_t"
    - name: "{{ mariadb_log_folder }}"
      setype: "mysqld_log_t"
  register: mariadb_folder_structure

- name: copy private keys for mariadb use
  become: yes
  copy: 
    remote_src: yes
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    owner: mysql
    group: mysql
    mode: 0600
  loop:
    - src: "{{ ssl_key_rsa }}"
      dest: "{{ mariadb_data_folder }}/mysql.server.key"

- name: update server config file
  become: yes
  block:
    - name: read server.cnf
      shell: cat /etc/my.cnf.d/server.cnf
      register: server_cnf_contents
      changed_when: false
    - name: update server.cnf TLS properties, if needed
      lineinfile:
        path: /etc/my.cnf.d/server.cnf
        state: present
        insertafter: "\\[mysqld\\]"
        line: "{{ item }}"
      loop:
        - "tls-version={{ ssl_version }}"
        - "ssl-cert={{ ssl_cert }}"
        - "ssl-key={{ mariadb_data_folder }}/mysql.server.key"
        - "ssl-ca={{ ssl_ca }}"
      when: not server_cnf_contents.stdout is match('^' + item)
      register: server_cnf_tls
    - name: update server.cnf max_packet property, if needed (Pentaho needs larger packet size)
      lineinfile:
        path: /etc/my.cnf.d/server.cnf
        state: present
        insertafter: "\\[mysqld\\]"
        line: "max_allowed_packet=1024M"
      when: server_cnf_contents.stdout.find('max_allowed_packet') == -1
      register: server_cnf_packet
    - name: network connection properties
      lineinfile:
        path: /etc/my.cnf.d/server.cnf
        state: present
        regexp: "^{{ item }}$"
        insertafter: "\\[mysqld\\]"
        line: "{{ item }}"
      when: not server_cnf_contents.stdout is match('^' + item)
      register: server_cnf_network
      loop:
        - "skip-name-resolve=true"
        - "bind-address=0.0.0.0"
    - name: read client.cnf
      shell: cat /etc/my.cnf.d/mysql-clients.cnf
      register: client_cnf_contents
      changed_when: false
    - name: update client.cnf if needed
      lineinfile:
        path: /etc/my.cnf.d/mysql-clients.cnf
        state: present
        regexp: "^{{ item }}$"
        insertafter: "\\[mysql\\]"
        line: "{{ item }}"
      when: not client_cnf_contents.stdout is match ('^' + item)
      register: client_cnf
      loop:
        - "socket={{ mariadb_data_folder }}/mysql.sock"

- name: set data folder
  become: yes
  lineinfile:
    path: /etc/my.cnf.d/server.cnf
    insertafter: "\\[mysqld\\]"
    regexp: '^datadir='
    line: 'datadir={{ mariadb_data_folder }}'

- name: set log folder
  become: yes
  lineinfile:
    path: /etc/my.cnf.d/server.cnf
    insertafter: "\\[mysqld\\]"
    regexp: '^log-error='
    line: 'log-error={{ mariadb_log_folder }}/mariadb.log'

- name: set socket path
  become: yes
  lineinfile:
    path: /etc/my.cnf.d/server.cnf
    insertafter: "\\[mysqld\\]"
    regexp: '^socket='
    line: 'socket={{ mariadb_data_folder}}/mysql.sock'

- name: mariadb logrotate
  become: yes
  template:
    src: logrotate.d/mariadb
    dest: /etc/logrotate.d/mariadb

- name: initialize database structures if needed
  become: yes
  become_user: mysql
  command: mysql_install_db
  args:
    chdir: "{{ mariadb_data_folder }}"
    creates: "{{ mariadb_data_folder }}/mysql/"

- name: enable MariaDB to start on boot
  become: yes
  systemd:
    daemon_reload: true
    name: mariadb
    enabled: yes
    masked: no

- name: start MariaDB
  become: yes
  systemd:
    name: mariadb
    state: restarted

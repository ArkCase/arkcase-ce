- name: activemq user
  become: yes
  user:
    name: activemq
    shell: /bin/false
    state: present

- name: ActiveMQ folders
  become: yes
  file:
    path: "{{ item }}"
    state: directory
    group: activemq
    owner: activemq
  with_items:
    - /opt/data/activemq
    - /opt/log/activemq
    - /opt/app/activemq
    - /opt/app/activemq/install
  register: activemq_folder_structure

- name: download ActiveMQ distribution (http://www.apache.org/dyn/closer.cgi?filename=/activemq/{{ activemq_version }}/apache-activemq-{{ activemq_version}}-bin.tar.gz&action=download)
  become: yes
  become_user: activemq
  get_url:
    dest: /opt/app/activemq/install/
    url: "http://www.apache.org/dyn/closer.cgi?filename=/activemq/{{ activemq_version }}/apache-activemq-{{ activemq_version }}-bin.tar.gz&action=download"
      
- name: unarchive ActiveMQ distribution
  become: yes
  become_user: activemq
  unarchive:
    remote_src: yes
    src: /opt/app/activemq/install/apache-activemq-{{ activemq_version }}-bin.tar.gz
    dest: /opt/app/activemq
    extra_opts:
      - --strip-components=1
    creates: /opt/app/activemq/LICENSE
  register: activemq_unarchived

- name: update startup script
  become: yes
  become_user: activemq
  lineinfile:
    path: /opt/app/activemq/bin/linux-x86-64/activemq
    regexp: "{{ item.regexp }}"
    line: "{{ item.line }}"
  with_items:
    - { regexp: "^ACTIVEMQ_HOME=", line: "ACTIVEMQ_HOME=/opt/app/activemq" }
    - { regexp: "^#RUN_AS_USER=$", line: "RUN_AS_USER=activemq" }
  when: activemq_unarchived is changed
    
- name: update wrapper.conf
  become: yes
  become_user: activemq
  lineinfile:
    path: /opt/app/activemq/bin/linux-x86-64/wrapper.conf
    insertafter: "{{ item.after }}"
    line: "{{ item.line }}"
  with_items:
    - { after: "^wrapper\\.java\\.additional\\.12.*", line: "wrapper.java.additional.13=-Dcom.sun.management.jmxremote.port=1616" }
    - { after: "^wrapper\\.java\\.additional\\.13.*", line: "wrapper.java.additional.14=-Dcom.sun.management.jmxremote.authenticate=false" }
    - { after: "^wrapper\\.java\\.additional\\.14.*", line: "wrapper.java.additional.15=-Dcom.sun.management.jmxremote.ssl=false" }
    - { after: "^wrapper\\.java\\.additional\\.15.*", line: "wrapper.java.additional.16=-Xdebug -Xnoagent -Djava.compiler=NONE" }
    - { after: "^wrapper\\.java\\.additional\\.16.*", line: "wrapper.java.additional.17=-Xrunjdwp:transport=dt_socket,server=y,suspend=n,address=5005" }
  when: activemq_unarchived is changed

- name: create ActiveMQ MySQL user
  become: yes
  mysql_user:
    login_unix_socket: /opt/data/mariadb/mysql.sock
    host: "%"
    name: activemq
    password: "@rKc@3S!"
    priv: '*.*:REQUIRESSL'
    state: present
    

- name: jdbc support
  block:
    - name: read activemq.xml
      shell: cat /opt/app/activemq/conf/activemq.xml
      register: activemq_xml
    - name: add jdbc data source, if not already added
      become: yes
      become_user: activemq
      blockinfile:
        path: /opt/app/activemq/conf/activemq.xml
        insertbefore: "</beans>"
        marker: "<!-- {mark} ANSIBLE MANAGED BLOCK -->"
        block: |
              <bean id="mysql-ds" class="org.apache.commons.dbcp2.BasicDataSource" destroy-method="close">
                  <property name="driverClassName" value="com.mysql.jdbc.Driver"/>
                  <property name="url" value="jdbc:mysql://acm-arkcase:3306/activemq?autoReconnect=true&amp;useUnicode=true&amp;characterEncoding=UTF-8&amp;trustServerCertificate=false&amp;useSSL=true&amp;serverSslCert=/etc/ssl/ca/arkcase-ca.crt"/>
                  <property name="username" value="activemq"/>
                  <property name="password" value="@rKc@3S!"/>
                  <property name="initialSize" value="5"/>
                  <property name="maxTotal" value="20"/>
                  <property name="maxIdle" value="5"/>
                  <property name="validationQuery" value="select 1"/>
                  <property name="testWhileIdle" value="true"/>
                  <property name="timeBetweenEvictionRunsMillis" value="3000"/>
              </bean>
      when: activemq_xml.stdout.find('bean id="mysql_ds"') == -1
    - name: set persistence adapter, if not already set
      become: yes
      become_user: activemq
      lineinfile:
        path: /opt/app/activemq/conf/activemq.xml
        regexp: '^.*kahaDB directory.*$'
        line: '<jdbcPersistenceAdapter dataDirectory="activemq-data" dataSource="#mysql-ds" lockKeepAlivePeriod="5000" createTablesOnStartup="true"/>'
      when: activemq_xml.stdout.find('jdbcPersistenceAdapter') == -1

  

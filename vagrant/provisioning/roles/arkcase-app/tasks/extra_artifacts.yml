- name: retrieve {{ e.name }} artifact
  become: yes
  become_user: arkcase
  command: sshpass -e sftp -o StrictHostKeyChecking\=no -o UserKnownHostsFile\=/dev/null {{ sftp_user }}@{{ e.sftp_base_url }}:{{ e.sftp_folder }}/{{ e.sftp_artifact }}
  args:
    chdir: "{{ root_folder }}/install/arkcase"
  environment:
    SSHPASS: "{{ sftp_password }}"
  when: e.sftp_base_url is defined

- name: copy {{ e.name }} artifact to install folder (this will tell us if it actually changed)
  become: yes
  become_user: arkcase
  copy:
    remote_src: yes
    src: "{{ root_folder }}/install/arkcase/{{ e.sftp_artifact }}"
    dest: "{{ e.deploy_path }}/{{ e.deploy_filename }}"
  register: extra_artifact
  when: e.sftp_base_url is defined

- name: create {{ e.name }} file folder
  become: yes
  become_user: arkcase
  file:
    path: "{{ e.files.path }}"
    state: directory
  when: e.create_files | bool
    
- name: copy {{ e.name }} files
  become: yes
  become_user: arkcase
  copy:
    remote_src: yes
    src: "{{ item.src }}"
    dest: "{{ e.files.path }}/{{ item.dest }}"
  loop: "{{ e.files.files_to_copy }}"
  when: e.create_files | bool and e.files.copy_files | bool

- name: template {{ e.name }} files
  become: yes
  become_user: arkcase
  copy:
    content: "{{ item.src }}"
    dest: "{{ e.files.path }}/{{ item.dest }}"
  loop: "{{ e.files.templates }}"
  when: e.create_files | bool and e.files.template_files | bool
  

- name: download Pentaho EE artifacts
  become: yes
  become_user: pentaho
  maven_artifact:
    repository_url: "{{ maven_repository_pentaho_ee }}"
    group_id: "pentaho-ee"
    artifact_id: "{{ item }}"
    version: "{{ pentaho_ee_version }}"
    extension: "zip"
    dest: "{{ root_folder }}/install/pentaho/{{ item }}.zip"
  loop:
    - paz-plugin-ee
    - pdd-plugin-ee
    - pir-plugin-ee
    - pentaho-server-ee

- name: create temp install folders
  become: yes
  become_user: pentaho
  file:
    path: "{{ root_folder }}/tmp/pentaho/{{ item }}"
    state: directory
  loop:
    - paz-plugin-ee
    - pdd-plugin-ee
    - pir-plugin-ee
    - pentaho-server-ee

- name: unzip artifacts
  become: yes
  become_user: pentaho
  command: unzip -j -d "{{ root_folder }}/tmp/pentaho/{{ item }}" "{{ root_folder }}/install/pentaho/{{ item }}.zip"
  args:
    creates: "{{ root_folder }}/tmp/pentaho/{{ item }}/license.txt"
  loop:
    - paz-plugin-ee
    - pdd-plugin-ee
    - pir-plugin-ee
    - pentaho-server-ee

# NOTE, the echo in the below commands is to provide the interactive
# response expected by the Pentaho installer.jar
- name: install artifacts
  become: yes
  become_user: pentaho
  shell: echo -e "{{ item.installer_response }}" | java -jar {{ root_folder }}/tmp/pentaho/{{ item.name }}/installer.jar -console
  args: 
    creates: "{{ item.creates }}"
  loop:
    - name: pentaho-server-ee
      creates: "{{ root_folder }}/app/pentaho/pentaho-server/import-export.sh"
      installer_response: "               1\n{{ root_folder }}/app/pentaho\n1"
    - name: paz-plugin-ee
      creates: "{{ root_folder }}/app/pentaho/analyzer/analyzer.properties"
      installer_response: "               1\n{{ root_folder }}/app/pentaho/pentaho-server/pentaho-solutions/system\n1"
    - name: pdd-plugin-ee
      creates: "{{ root_folder }}/app/pentaho/dashboards/plugin.xml"
      installer_response: "               1\n{{ root_folder }}/app/pentaho/pentaho-server/pentaho-solutions/system\nY\n1"
    - name: pir-plugin-ee
      creates: "{{ root_folder }}/app/pentaho/pentaho-interactive-reporting/plugin.xml"
      installer_response: "               1\n{{ root_folder }}/pentaho-server/pentaho-solutions/system\nY\n1"
  
#### pentaho-ee specific updates... all updates common
#### to both pentaho-ce and pentaho-ee are in the
#### pentaho-configuration role

- name: database configuration templates
  become: yes
  become_user: pentaho
  template:
    backup: yes
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
  loop:
    - src: context.xml
      dest: "{{ root_folder }}/app/pentaho/pentaho-server/tomcat/webapps/pentaho/META-INF/context.xml"
    - src: mysql5.hibernate.cfg.xml
      dest: "{{ root_folder}}/app/pentaho/pentaho-server/pentaho-solutions/system/hibernate/mysql5.hibernate.cfg.xml"

- name: server properties
  become: yes
  become_user: pentaho
  template:
    backup: yes
    src: server.properties
    dest: "{{ root_folder }}/app/pentaho/pentaho-server/pentaho-solutions/system/server.properties"

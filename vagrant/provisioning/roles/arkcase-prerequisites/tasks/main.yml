- name: Ensure group arkcase exists
  become: yes
  group:
    name: arkcase
    state: present

- name: arkcase user
  become: yes
  user:
    name: arkcase
    shell: /bin/false
    state: present
    group: arkcase

- name: arkcase folders
  become: yes
  file:
    path: "{{ item }}"
    state: directory
    group: arkcase
    owner: arkcase
  loop:
    - "{{ root_folder }}/data/arkcase"
    - "{{ root_folder }}/data/arkcase-home"
    - "{{ root_folder }}/data/arkcase-home/.arkcase"
    - "{{ root_folder }}/data/arkcase-home/.yarn"
    - "{{ root_folder }}/data/arkcase-home/.cache"
    - "{{ root_folder }}/log/arkcase"
    - "{{ root_folder }}/app/arkcase"
    - "{{ root_folder }}/install/arkcase"
    - "{{ root_folder }}/tmp/arkcase"
    - "{{ root_folder }}/app/config-server"
    - "{{ root_folder }}/log/config-server"
    - "{{ root_folder }}/tmp/config-server"
    - "{{ root_folder }}/data/config-server/tmp"
  register: arkcase_folder_structure

- name: link folders if they don't already exist
  include_tasks: link_folder.yml
  loop:
    - ".yarn"
    - ".cache"
    - ".arkcase"

- name: enable logrotate for arkcase log folder if necessary
  include_tasks: "{{ role_path }}/../common/tasks/logrotate.yml"
  loop:
    - arkcase
    - config-server

- name: create arkcase database schema
  include_tasks: "{{ role_path }}/../mariadb/tasks/create_schema.yml"
  args:
    apply:
      vars:
        item: arkcase

- name: get yarn repository definition
  include_tasks: "{{ role_path }}/../common/tasks/download.yml"
  loop:
    - name: Yarn repository
      dest: /etc/yum.repos.d/yarn.repo
      owner: root
      url: https://dl.yarnpkg.com/rpm/yarn.repo

- name: required packages to run ArkCase webapp
  become: yes
  yum:
    state: present
    name:
      - yarn
      - npm
      - nodejs

- name: install the npm module 'husky' which seems required by some ArkCase versions
  npm:
    name: husky
    global: yes
    state: present
    
- include_tasks: "{{ role_path }}/../tomcat/tasks/main.yml"
  args:
    apply:
      vars:
        tc:
          service: arkcase
          user: arkcase
          tomcat_home: "{{ root_folder }}/app/arkcase"
          tls_port: 8843
          shutdown_port: 4005
          jmx_remote_port: 40506
          jmx_rmi_port: 40507
          http_port: 8080
          redirect_port: 4443
          ajp_port: 4009
          catalina_out: "{{ root_folder }}/log/arkcase/catalina.out"
          catalina_temp: "{{ root_folder }}/tmp/arkcase"
          log_folder: "{{ root_folder }}/log/arkcase"
          java_home: "/usr/lib/jvm/java-1.8.0-openjdk"
  register: tomcat_unarchived

- name: add options to JAVA_OPTS
  become: yes
  become_user: arkcase
  blockinfile:
    path: "{{ root_folder }}/app/arkcase/bin/setenv.sh"
    insertbefore: EOF
    marker: "# {mark} ANSIBLE MANAGED BLOCK - CONFIG-SERVER JAVA_OPTS"
    block: |
      export JAVA_OPTS="$JAVA_OPTS -Dacm.configurationserver.propertyfile=/home/arkcase/.arkcase/acm/conf.yml -Duser.home={{ root_folder }}/data/arkcase-home"


- name: configure NodeJS minification
  become: yes
  become_user: arkcase
  blockinfile:
    path: "{{ root_folder }}/app/arkcase/bin/setenv.sh"
    insertbefore: EOF
    marker: "# {mark} ANSIBLE MANAGED BLOCK - NODE_ENV"
    block: |
      # set Node.js production profile to minify JavaScript and CSS
      #export NODE_ENV=development
      export NODE_ENV=production

- name: configure temp environment
  become: yes
  become_user: arkcase
  blockinfile:
    path: "{{ root_folder }}/app/arkcase/bin/setenv.sh"
    insertbefore: EOF
    marker: "# {mark} ANSIBLE MANAGED BLOCK - TEMP ENV"
    block: |
      export TEMP={{ root_folder }}/tmp/arkcase
      export TMP={{ root_folder }}/tmp/arkcase

- name: configure external web portal logging file
  become: yes
  become_user: arkcase
  blockinfile:
    path: "{{ root_folder }}/app/arkcase/bin/setenv.sh"
    insertbefore: EOF
    marker: "# {mark} ANSIBLE MANAGED BLOCK - EXTERNAL-PORTAL LOGGING"
    block: |
      export LOGGING_FILE_NAME={{ root_folder }}/log/arkcase/externalPortal.log

- name: install "yq" cli yaml/json editing tool
  become: yes
  get_url:
    url: "https://github.com/mikefarah/yq/releases/download/v4.13.2/yq_linux_amd64"
    dest: /usr/bin/yq
    mode: '0755'


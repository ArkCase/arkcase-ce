- name: add foia extension to JAVA_OPTS
  become: yes
  become_user: arkcase
  blockinfile:
    path: "{{ root_folder }}/app/arkcase/bin/setenv.sh"
    insertbefore: EOF
    marker: "# {mark} ANSIBLE MANAGED BLOCK - FOIA EXTENSION"
    block: |
      export JAVA_OPTS="$JAVA_OPTS -Dspring.profiles.active=extension-foia,ldap"

### External UI portal

- name: download foia UI portal 
  become: yes
  become_user: apache
  command: sshpass -e sftp -o StrictHostKeyChecking\=no -o UserKnownHostsFile\=/dev/null {{ sftp_arkcase_user }}@{{ sftp_service_base_url }}:{{ sftp_arkcase_folder }}/foia.zip
  args:
    chdir: "{{ root_folder }}/tmp/httpd"
  environment:
    SSHPASS: "{{ sftp_arkcase_password }}"
  changed_when: false

- name: copy foia UI portal to install folder (this will tell us if it actually changed)
  become: yes
  become_user: apache
  copy:
    remote_src: yes
    src: "{{ root_folder }}/tmp/httpd/foia.zip"
    dest: "{{ root_folder }}/install/httpd/foia.zip"
  register: foia_zip

- name: see if foia web folder exists
  become: yes
  become_user: apache
  stat: 
    path: "{{ root_folder }}/data/httpd/htdocs/foia"
  register: foia_web_folder

- name: backup existing folder if necessary
  become: yes
  become_user: apache
  command: mv "{{ root_folder }}/data/httpd/htdocs/foia" "{{ root_folder }}/data/httpd/htdocs/foia.{{ ansible_date_time.iso8601 }}"
  when: foia_web_folder.stat.exists and foia_zip is changed

- name: ensure foia web folder exists
  become: yes
  become_user: apache
  file:
    path: "{{ root_folder }}/data/httpd/htdocs/foia"
    state: directory

- name: unzip foia ui portal
  become: yes
  become_user: apache
  unarchive:
    remote_src: yes
    src: "{{ root_folder }}/install/httpd/foia.zip"
    dest: "{{ root_folder }}/data/httpd/htdocs/foia/"
  when: foia_zip is changed

#### External REST Portal
- name: create config folder
  become: yes
  become_user: arkcase
  file:
    path: "{{ item }}"
    state: directory
  loop:
    - "{{ root_folder }}/data/arkcase-home/.external-portal-api"
    - "{{ root_folder }}/data/arkcase-home/.external-portal-api/files"

- name: application.properties
  become: yes
  become_user: arkcase
  template:
    force: no
    src: application.properties
    dest: "{{ root_folder }}/data/arkcase-home/.external-portal-api"

- name: ldap properties
  become: yes
  become_user: arkcase
  template:
    src: spring-config-foia-portal-ldap.properties
    dest: "{{ root_folder }}/data/arkcase-home/.arkcase/acm/spring/spring-config-foia-portal-ldap.properties"
  when: encrypted_ldap_bind_password is defined

- name: copy key store and trust store
  become: yes
  become_user: arkcase
  copy:
    remote_src: yes
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
  loop:
    - src: "{{ java_key_store }}"
      dest: "{{ root_folder }}/data/arkcase-home/.external-portal-api/arkcase.ks"
    - src: "{{ java_trust_store }}"
      dest: "{{ root_folder }}/data/arkcase-home/.external-portal-api/arkcase.ts"

- name: download the FOIA REST portal webapp
  become: yes
  become_user: arkcase
  command: sshpass -e sftp -o StrictHostKeyChecking\=no -o UserKnownHostsFile\=/dev/null {{ sftp_arkcase_user }}@{{ sftp_service_base_url }}:{{ sftp_arkcase_folder }}/external-portal.war
  args:
    chdir: "{{ root_folder }}/tmp/arkcase"
  environment:
    SSHPASS: "{{ sftp_arkcase_password }}"
  changed_when: false

- name: copy foia REST portal to install folder (this will tell us if it actually changed)
  become: yes
  become_user: arkcase
  copy:
    remote_src: yes
    src: "{{ root_folder }}/tmp/arkcase/external-portal.war"
    dest: "{{ root_folder }}/install/arkcase/external-portal.war"
  register: rest_portal_war

- name: copy foia REST portal to ArkCase webapps folder
  become: yes
  become_user: arkcase
  copy:
    remote_src: yes
    src: "{{ root_folder }}/install/arkcase/external-portal.war"
    dest: "{{ root_folder }}/app/arkcase/webapps/arkcase#external-portal.war"

- name: FOIA server-specific configuration
  become: yes
  become_user: arkcase
  template:
    backup: yes
    src: foia.yml
    dest: /home/arkcase/.arkcase/acm/acm-config-server-repo/arkcase-FOIA_server.yaml

- name: read current config server configuration
  become: yes
  become_user: arkcase
  command: cat /home/arkcase/.arkcase/acm/conf.yml
  register: foia_conf_yml
  changed_when: false

- name: update config server configuration for FOIA
  become: yes
  become_user: arkcase
  replace:
    backup: yes
    path: /home/arkcase/.arkcase/acm/conf.yml
    regexp: "server,runtime"
    replace: "FOIA_server,server,runtime"
  when: "'FOIA_server,server,runtime' not in foia_conf_yml.stdout"

- name: deploy foia reports
  include_tasks: deploy_foia_report.yml
  loop: "{{ arkcase_foia_reports }}"
  loop_control:
    loop_var: r
  vars:
    report_path: "foia"

- name: deploy foia audit reports
  include_tasks: deploy_foia_report.yml
  loop: "{{ arkcase_foia_audit_reports }}"
  loop_control:
    loop_var: r
  vars:
    report_path: "foia-audit"
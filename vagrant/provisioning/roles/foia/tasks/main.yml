- name: install required packages
  become: yes
  yum:
    name: 
      - httpd
      - mod_ssl
    state: present

- name: httpd log folder
  become: yes
  file:
    path: "{{ item }}"
    state: directory
    owner: apache
    group: apache
    seuser: "system_u"
    serole: "object_r"
    setype: "httpd_log_t"
    selevel: "s0"
  loop:
    - "{{ root_folder }}/log/httpd"

- name: httpd data folders
  become: yes
  file:
    path: "{{ item }}"
    state: directory
    owner: apache
    group: apache
    seuser: "system_u"
    serole: "object_r"
    setype: "httpd_sys_content_t"
    selevel: "s0"
  loop:
    - "{{ root_folder }}/data/httpd"
    - "{{ root_folder }}/data/httpd/htdocs"
    - "{{ root_folder }}/tmp/httpd"
    - "{{ root_folder }}/install/httpd"

- name: copy private key for httpd
  become: yes
  copy:
    remote_src: yes
    src: "{{ ssl_key }}"
    dest: "{{ root_folder }}/data/httpd/httpd.key"
    owner: apache
    group: apache
    mode: 0600

- name: add foia extension to JAVA_OPTS
  become: yes
  become_user: arkcase
  blockinfile:
    path: "{{ root_folder }}/app/arkcase/bin/setenv.sh"
    insertbefore: EOF
    marker: "# {mark} ANSIBLE MANAGED BLOCK - FOIA EXTENSION"
    block: |
      export JAVA_OPTS="$JAVA_OPTS -Dspring.profiles.active=extension-foia,ldap"

- name: Set portal version formatted
  set_fact:
    portal_ui_version_formatted: "{{ '-' ~ portal_ui_version if portal_ui_version != '' }}"
    portal_version_formatted: "{{ '-' ~ portal_version if portal_version != '' }}"
    
### External UI portal

- name: download foia UI portal 
  become: yes
  become_user: apache
  command: sshpass -e sftp -o StrictHostKeyChecking\=no -o UserKnownHostsFile\=/dev/null {{ sftp_arkcase_user }}@{{ sftp_service_base_url }}:{{ sftp_arkcase_folder }}/foia{{ foia_extension_formatted }}{{ portal_ui_version_formatted }}.zip
  args:
    chdir: "{{ root_folder }}/tmp/httpd"
  environment:
    SSHPASS: "{{ sftp_arkcase_password }}"
  changed_when: false

- name: copy foia UI portal to install folder (this will tell us if it actually changed)
  become: yes
  become_user: apache
  copy:
    remote_src: yes
    src: "{{ root_folder }}/tmp/httpd/foia{{ foia_extension_formatted }}{{ portal_ui_version_formatted }}.zip"
    dest: "{{ root_folder }}/install/httpd/foia{{ foia_extension_formatted }}{{ portal_ui_version_formatted }}.zip"
  register: foia_zip

- name: see if foia web folder exists
  become: yes
  become_user: apache
  stat: 
    path: "{{ root_folder }}/data/httpd/htdocs/{{ foia_portal_context }}"
  register: foia_web_folder

- name: backup existing folder if necessary
  become: yes
  become_user: apache
  command: mv "{{ root_folder }}/data/httpd/htdocs/{{ foia_portal_context }}" "{{ root_folder }}/data/httpd/htdocs/{{ foia_portal_context }}.{{ ansible_date_time.iso8601 }}"
  when: foia_web_folder.stat.exists and foia_zip is changed

- name: ensure foia web folder exists
  become: yes
  become_user: apache
  file:
    path: "{{ root_folder }}/data/httpd/htdocs/{{ foia_portal_context }}"
    state: directory

- name: unzip foia ui portal
  become: yes
  become_user: apache
  unarchive:
    remote_src: yes
    src: "{{ root_folder }}/install/httpd/foia{{ foia_extension_formatted }}{{ portal_ui_version_formatted }}.zip"
    dest: "{{ root_folder }}/data/httpd/htdocs/{{ foia_portal_context }}/"
  when: foia_zip is changed

#### External REST Portal
- name: create config folder
  become: yes
  become_user: arkcase
  file:
    path: "{{ item }}"
    state: directory
  loop:
    - "{{ root_folder }}/data/arkcase-home/.external-portal-api"
    - "{{ root_folder }}/data/arkcase-home/.external-portal-api/files"

- name: application.properties
  become: yes
  become_user: arkcase
  template:
    force: no
    src: application.properties
    dest: "{{ root_folder }}/data/arkcase-home/.external-portal-api"
  when: arkcase_version != "" and arkcase_version is version('2020.14', '<')

- name: ensure no acm-activemq in application.properties
  become: yes
  become_user: arkcase
  replace:
    path: "{{ root_folder }}/data/arkcase-home/.external-portal-api/application.properties"
    regexp: "acm-activemq"
    replace: "{{ activemq_host }}"
  when: arkcase_version != "" and arkcase_version is version('2020.14', '<')

- name: server configuration
  become: yes
  become_user: arkcase
  template:
    force: yes
    src: arkcase-portal-server.yaml
    dest: "{{ root_folder }}/data/arkcase-home/.arkcase/acm/acm-config-server-repo/arkcase-portal-server.yaml"
  when: arkcase_version != "" and arkcase_version is version('2020.14', '>=') and arkcase_version is version('2020.16', '<')

- name: server configuration from version 2020.16
  become: yes
  become_user: arkcase
  template:
    force: yes
    src: arkcase-portal-server-2020.16.yaml
    dest: "{{ root_folder }}/data/arkcase-home/.arkcase/acm/acm-config-server-repo/arkcase-portal-server.yaml"
  when: arkcase_version == "" or arkcase_version is version('2020.16', '>=')

- name: configure LDAP
  include_role: 
    name: arkcase-ldap-config
  vars:
    old_config_id: foiaportal
    new_config_id: "foiaportal"
    autogenerate_user_id: true
    ldap_user_domain_bean_name: "foiaportal"
    ldap_authentication_service_class: "gov.foia.service.FOIALdapAuthenticationService"
    portal_prefix: "portal."
    ldap_template_name: "spring-config-foiaportal-ldap.xml"
    group_base: "{{ ldap_portal_group_no_base | default(ldap_group_no_base) }}"
    user_base: "{{ ldap_portal_user_no_base | default(ldap_user_no_base) }}"
  when: encrypted_ldap_bind_password is defined

- name: copy key store and trust store
  become: yes
  become_user: arkcase
  copy:
    remote_src: yes
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
  loop:
    - src: "{{ java_key_store }}"
      dest: "{{ root_folder }}/data/arkcase-home/.external-portal-api/arkcase.ks"
    - src: "{{ java_trust_store }}"
      dest: "{{ root_folder }}/data/arkcase-home/.external-portal-api/arkcase.ts"

- name: download the FOIA REST portal webapp
  become: yes
  become_user: arkcase
  command: sshpass -e sftp -o StrictHostKeyChecking\=no -o UserKnownHostsFile\=/dev/null {{ sftp_arkcase_user }}@{{ sftp_service_base_url }}:{{ sftp_arkcase_folder }}/external-portal{{ foia_extension_formatted }}{{ portal_version_formatted }}.war
  args:
    chdir: "{{ root_folder }}/tmp/arkcase"
  environment:
    SSHPASS: "{{ sftp_arkcase_password }}"
  changed_when: false

- name: copy foia REST portal to install folder (this will tell us if it actually changed)
  become: yes
  become_user: arkcase
  copy:
    remote_src: yes
    src: "{{ root_folder }}/tmp/arkcase/external-portal{{ foia_extension_formatted }}{{ portal_version_formatted }}.war"
    dest: "{{ root_folder }}/install/arkcase/external-portal{{ foia_extension_formatted }}{{ portal_version_formatted }}.war"
  register: rest_portal_war

- name: copy foia REST portal to ArkCase webapps folder
  become: yes
  become_user: arkcase
  copy:
    remote_src: yes
    src: "{{ root_folder }}/install/arkcase/external-portal{{ foia_extension_formatted }}{{ portal_version_formatted }}.war"
    dest: "{{ root_folder }}/app/arkcase/webapps/arkcase#external-portal.war"

- name: FOIA server-specific configuration
  become: yes
  become_user: arkcase
  template:
    backup: yes
    src: foia.yml
    dest: /home/arkcase/.arkcase/acm/acm-config-server-repo/arkcase-FOIA_server.yaml

- name: read current config server configuration
  become: yes
  become_user: arkcase
  command: cat /home/arkcase/.arkcase/acm/conf.yml
  register: foia_conf_yml
  changed_when: false

- name: update config server configuration for FOIA
  become: yes
  become_user: arkcase
  replace:
    backup: yes
    path: /home/arkcase/.arkcase/acm/conf.yml
    regexp: "server,runtime"
    replace: "FOIA_server,server,runtime"
  when: "'FOIA_server,server,runtime' not in foia_conf_yml.stdout"

# - name: deploy foia audit reports
#   include_tasks: deploy_foia_report.yml
#   loop: "{{ arkcase_foia_audit_reports }}"
#   loop_control:
#     loop_var: r
#   vars:
#     report_path: "foia-audit"

- name: ensure web and proxy ports
  become: yes
  firewalld:
    immediate: yes
    permanent: yes
    port: "{{ item }}"
    state: enabled
  loop:
    - "80/tcp"
    - "443/tcp"
    - "8404/tcp"

- name: install epel-release 
  become: yes
  yum:
    name: epel-release
    state: present

- name: install software collections
  become: yes
  yum:
    name: centos-release-scl
    state: present

- name: install haproxy 1.8
  become: yes
  yum: 
    name: rh-haproxy18-haproxy
    state: present

- name: haproxy folders
  become: yes
  file:
    path: "{{ root_folder }}/log/haproxy"
    state: directory
    owner: haproxy
    group: haproxy

- name: Change rsyslog.conf for allow haproxy logging
  become: yes
  lineinfile:
    path: /etc/rsyslog.conf
    backup: yes
    regex: "{{ item.regexp }}"
    line: "{{ item.line }}"
  loop:
    - regexp: '^\#\$ModLoad\ imudp'
      line: '$ModLoad imudp'
    - regexp: '^\#\$UDPServerRun\ 514'
      line: '$UDPServerRun 514'
  register: rsyslog_configuration

- name: Copy haproxy log configuration into rsyslog.d
  become: yes
  template:
    src: haproxy-rsyslog.d
    dest: /etc/rsyslog.d/haproxy.conf
    backup: yes
  register: haproxy_rsyslog

- name: Restart rsyslog service if needed
  become: yes
  systemd:
    name: rsyslog
    state: restarted
  when: rsyslog_configuration is changed or haproxy_rsyslog is changed 

- name: remove default TLS policies
  become: yes
  lineinfile:
    path: /etc/opt/rh/rh-haproxy18/haproxy/haproxy.cfg
    backup: yes
    regexp: "{{ item.regexp }}"
    line: "{{ item.line }}"
  loop:
    - regexp: '^    ssl-default-bind-ciphers PROFILE=SYSTEM'
      line: '   # ssl-default-bind-ciphers PROFILE=SYSTEM'
    - regexp: '^    ssl-default-server-ciphers PROFILE=SYSTEM'
      line: '   # ssl-default-server-ciphers PROFILE=SYSTEM'
  register: default_tls_options
  
- name: establish our preferred default policies
  become: yes
  lineinfile:
    path: /etc/opt/rh/rh-haproxy18/haproxy/haproxy.cfg
    backup: yes
    line: "{{ item }}"
    insertafter: stats socket /var/opt/rh/rh-haproxy18/lib/haproxy/stats
  loop:
    - "    ssl-default-server-options   force-tlsv12"
    - "    ssl-default-bind-ciphers  ECDH+AESGCM:DH+AESGCM:ECDH+AES256:DH+AES256:ECDH+AES128:DH+AES:RSA+AESGCM:RSA+AES:!aNULL:!MD5:!DSS"
    - "    tune.ssl.default-dh-param 2048"
    - "    # ArkCase Default TLS Options"
    - "    log         127.0.0.1:514 local2" 
  register: good_tls_options
  
- name: read current config
  become: yes
  command: cat /etc/opt/rh/rh-haproxy18/haproxy/haproxy.cfg
  register: current_config
  changed_when: false
  
- name: remove default frontend/backend configuration
  become: yes
  command: sed -i '/^# main frontend which proxys to the backends$/,$d' /etc/opt/rh/rh-haproxy18/haproxy/haproxy.cfg
  when: '"main frontend which proxys to the backends" in current_config.stdout'
  register: remove_default_config
  
- name: generate cert/key file that haproxy can read
  become: yes
  shell: cat {{ ssl_cert }} {{ ssl_ca }} {{ ssl_key }} > /etc/pki/tls/certs/{{ internal_host }}.pem
  
- name: ArkCase configuration
  become: yes
  blockinfile:
    path: /etc/opt/rh/rh-haproxy18/haproxy/haproxy.cfg
    backup: yes
    block: |
      frontend stats
        bind *:8404
        stats enable
        stats uri /stats
        stats refresh 10s
        stats admin if LOCALHOST
        stats auth admin:{{ default_user_password }}
      
      frontend main
        mode http
        bind *:80

        bind *:443 force-tlsv12 ssl crt /etc/pki/tls/certs/{{ internal_host }}.pem
        redirect scheme https code 301 if !{ ssl_fc }
        
        # for URLs that should not be called from outside, 
        # but only by services within our network.
        acl only_localhost src 127.0.0.1
        
        acl acl_solr path_beg /solr
        acl acl_pentaho path_beg /pentaho
        acl acl_alfresco path_beg /alfresco
        acl acl_share path_beg /share
        acl acl_snowbound path_beg /VirtualViewerJavaHTML5
        acl acl_arkcase path_beg /arkcase
        
        #arkcase.next services

        # ensure internal sites only visible internally
        http-request deny if acl_solr !only_localhost
        
        # backend uses
        use_backend be_solr if acl_solr
        use_backend be_pentaho if acl_pentaho
        use_backend be_alfresco if acl_alfresco
        use_backend be_share if acl_share
        use_backend be_snowbound if acl_snowbound
        use_backend be_arkcase if acl_arkcase
        
      #backend servers  
      backend be_solr
        http-response add-header X-Solr-Node %s
        mode http
        balance roundrobin
        option tcp-check
        server solr0 {{ solr_host }}:8983 check fall 3 rise 2 check ssl verify required ca-file {{ ssl_ca }}
        
      backend be_pentaho
        http-response add-header X-Pentaho-Node %s
        mode http
        option tcp-check
        server pentaho0 {{ pentaho_host }}:2002 check fall 3 rise 2 check ssl verify required ca-file {{ ssl_ca }}
        
      backend be_alfresco
        http-response add-header X-Afresco-Node %s
        mode http
        option tcp-check
        server alfresco0 {{ alfresco_host }}:7070 check fall 3 rise 2 check ssl verify required ca-file {{ ssl_ca }}
        
      backend be_share
        http-response add-header X-Share-Node %s
        mode http
        option tcp-check
        server share0 {{ alfresco_host }}:7070 check fall 3 rise 2 check ssl verify required ca-file {{ ssl_ca }}
        
      backend be_snowbound
        http-response add-header X-Snowbound-Node %s
        mode http
        option tcp-check
        server snowbound0 {{ snowbound_host }}:2005 check fall 3 rise 2 check ssl verify required ca-file {{ ssl_ca }}
        
      backend be_arkcase
        http-response add-header X-ArkCase-Node %s
        mode http
        option tcp-check
        server arkcase0 {{ arkcase_host }}:8843 check fall 3 rise 2 check ssl verify required ca-file {{ ssl_ca }}
  
  register: arkcase_config

- name: FOIA fronted part
  become: yes
  lineinfile:
    backup: yes      
    path: "/etc/opt/rh/rh-haproxy18/haproxy/haproxy.cfg"
    insertafter: "acl acl_arkcase path_beg /arkcase"
    line: "  acl acl_foia path_beg /foia"
  when: foia_portal_context is defined

- name: Tell FOIA fronted which backend will use
  become: yes
  lineinfile:
    backup: yes
    path: "/etc/opt/rh/rh-haproxy18/haproxy/haproxy.cfg"
    insertafter: "# backend uses"
    line: "  use_backend be_foia if acl_foia"
  when: foia_portal_context is defined  

- name: FOIA context, if needed
  become: yes
  blockinfile:
    backup: yes
    marker: "# {mark} ANSIBLE MANAGED BLOCK FOIA CONTEXT"
    insertafter: "#backend servers"
    path: "/etc/opt/rh/rh-haproxy18/haproxy/haproxy.cfg"
    block: |
       backend be_foia
        http-response add-header X-FOIA-Node %s
        mode http
        option tcp-check
        server foia0 {{ internal_host }}:488 check fall 3 rise 2 check ssl verify required ca-file {{ ssl_ca }}
  when: foia_portal_context is defined

- name: Set up proxies to microservices
  block:
    - name: Populate haproxy.conf with fronted part 
      become: yes
      insertafter: "#arkcase.next services"
      path: "/etc/opt/rh/rh-haproxy18/haproxy/haproxy.cfg"
      block: |
        acl acl_schema-registry path_beg /schema-registry
        acl acl_elasticsearch path_beg /elasticsearch
        acl acl_gateway path_beg /gateway
        acl acl_eureka path_beg /eureka
        acl acl_eureka-dashboard path_beg /eureka-dashboard
        acl acl_control-center path_beg /control-center
        acl acl_zipkin-health path_beg /zipkin/health
        acl acl_zipkin-api path_beg /zipkin/api
        acl acl_zipkin path_beg /zipkin
        acl acl_config path_beg /config
    - name: Tell fronted part which backend servers will use
      become: yes
      insertafter: "# backend uses"
      path: "/etc/opt/rh/rh-haproxy18/haproxy/haproxy.cfg"
      block: |
        use_backend be_schema-registry if acl_schema-registry
        use_backend be_elasticsearch if acl_elasticsearch
        use_backend be_gateway if acl_gateway
        use_backend be_eureka if acl_eureka
        use_backend be_eureka-dashboard if acl_eureka-dashboard
        use_backend be_control-center if acl_control-center
        use_backend be_zipkin-health if acl_zipkin-health
        use_backend be_zipkin-api if acl_zipkin-api
        use_backend be_zipkin if acl_zipkin
        use_backend be_config if acl_config
    - name: Populate haproxy.conf with backend servers
      become: yes
      marker: "# {mark} ANSIBLE MANAGED BLOCK MICROSERVICES CONTEXT"
      insertafter: "#backend servers"
      path: "/etc/opt/rh/rh-haproxy18/haproxy/haproxy.cfg"
      block: |
        backend be_schema-registry
          http-response add-header X-Schema-registry %s
          mode http
          option tcp-check
          server schema-registry {{ internal_host }}:8081 check fall 3 rise 2 check ssl verify required ca-file {{ ssl_ca }}

        backend be_elasticsearch
          http-response add-header X-Elasticsearch %s
          mode http
          option tcp-check
          server elasticsearch {{ internal_host }}:9200 check fall 3 rise 2 check ssl verify required ca-file {{ ssl_ca }}

        backend be_gateway
          http-response add-header X-Gateway %s
          mode http
          option tcp-check
          server gateway {{ arkcase_host }}:9000 check fall 3 rise 2 check ssl verify required ca-file {{ ssl_ca }}

        backend be_eureka
          http-response add-header X-Eureka %s
          mode http
          option tcp-check
          server eureka {{ arkcase_host }}:9000/eureka check fall 3 rise 2 check ssl verify required ca-file {{ ssl_ca }}

        backend be_eureka-dashboard
          http-response add-header X-Eureka-Dashboard %s
          mode http
          option tcp-check
          server eureka-dashboard {{ arkcase_host }}:9000/eureka-dashboard check fall 3 rise 2 check ssl verify required ca-file {{ ssl_ca }}

        backend be_control-center
          http-response add-header X-Control-Center %s
          mode http
          option tcp-check
          server control-center {{ internal_host }}:9021 check fall 3 rise 2 check ssl verify required ca-file {{ ssl_ca }}

        backend be_zipkin-health
          http-response add-header X-Zipkin-Health %s
          mode http
          option tcp-check
          server zipkin-health {{ internal_host }}:9411/health check fall 3 rise 2 check ssl verify required ca-file {{ ssl_ca }}

        backend be_zipkin-api
          http-response add-header X-Zipkin-Api %s
          mode http
          option tcp-check
          server zipkin-api {{ internal_host }}:9411/api check fall 3 rise 2 check ssl verify required ca-file {{ ssl_ca }}

        backend be_zipkin
          http-response add-header X-Zipkin %s
          mode http
          option tcp-check
          server zipkin {{ internal_host }}:9411/zipkin check fall 3 rise 2 check ssl verify required ca-file {{ ssl_ca }}

        backend be_config
          http-response add-header X-Config %s
          mode http
          option tcp-check
          server config {{ arkcase_host }}:9999 check fall 3 rise 2 check ssl verify required ca-file {{ ssl_ca }}

  when: enable_kafka is defined and enable_kafka == "yes" and enable_elasticsearch is defined and enable_elasticsearch == "yes"        

- name: haprxy logrotate
  become: yes
  template:
    src: rh-haproxy18-haproxy.logrotate.d 
    dest: "/etc/logrotate.d/rh-haproxy18-haproxy"
    force: yes
    backup: yes

- name: enable haproxy to connect to any port
  become: yes
  seboolean:
    name: haproxy_connect_any
    state: yes
    persistent: yes
    
- name: enable haproxy
  become: yes
  systemd:
    name: rh-haproxy18-haproxy
    enabled: yes
    
- name: restart haproxy if needed
  become: yes
  systemd:
    name: rh-haproxy18-haproxy
    state: restarted
  when: good_tls_options is changed or default_tls_options is changed or remove_default_config is changed or arkcase_config is changed

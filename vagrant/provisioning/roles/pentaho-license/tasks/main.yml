- name: download Pentaho EE licenses
  become: yes
  become_user: pentaho
  maven_artifact:
    repository_url: "{{ maven_repository_pentaho_ee_licenses }}"
    username: "{{ maven_user }}"
    password: "{{ maven_password }}"
    group_id: "pentaho-ee"
    artifact_id: "pentaho-server-licenses"
    version: "{{ maven_pentaho_license_year }}"
    extension: "zip"
    dest: "{{ root_folder }}/install/pentaho/pentaho-licenses.zip"
  register: maven_pentaho_licenses

- name: make folder for license version
  become: yes
  become_user: pentaho
  file:
    path: "{{ root_folder }}/install/pentaho/{{ maven_pentaho_license_year }}"
    state: directory

- name: unarchive licenses
  become: yes
  become_user: pentaho
  unarchive:
    remote_src: yes
    keep_newer: yes
    src: "{{ root_folder }}/install/pentaho/pentaho-licenses.zip"
    dest: "{{ root_folder }}/install/pentaho/{{ maven_pentaho_license_year }}"
    creates: "{{ root_folder }}install/pentaho/{{ maven_pentaho_license_year }}/Pentaho Analysis Enterprise Edition.lic"
  when: maven_pentaho_licenses is changed
  register: licenses_unzipped

# note, the licenses only seem to be applied through the home
# folder, so the path ~pentaho/.pentaho is mandatory.
- name: create pentaho license folder
  become: yes
  become_user: pentaho
  file: 
    path: /home/pentaho/.pentaho
    state: directory

- name: install licenses, if necessary
  become: yes
  become_user: pentaho
  shell: sh {{ root_folder }}/app/pentaho/license-installer/install_license.sh install -q "{{ root_folder }}/install/pentaho/{{ maven_pentaho_license_year }}/{{ item }}"
  environment:
    PENTAHO_INSTALLED_LICENSE_PATH: /home/pentaho/.pentaho/.installedLicenses.xml
  when: licenses_unzipped is changed
  register: pentaho_license_script_out
  loop:
    - "Pentaho Analysis Enterprise Edition.lic"
    - "Pentaho BI Platform Enterprise Edition.lic"
    - "Pentaho Dashboard Designer.lic"
    - "Pentaho Reporting Enterprise Edition.lic"
  failed_when: "'The license has been successfully processed' not in pentaho_license_script_out.stdout"

- name: restart Pentaho to install new licenses, if necessary
  become: yes
  systemd:
    name: pentaho
    state: restarted
  when: license_file_update is changed

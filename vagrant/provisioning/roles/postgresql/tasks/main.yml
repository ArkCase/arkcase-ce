---
- name: Install PostgreSQL yum repository.
  become: yes
  yum: 
    name: https://download.postgresql.org/pub/repos/yum/reporpms/EL-7-x86_64/pgdg-redhat-repo-latest.noarch.rpm
    state: present

- name: Ensure PostgreSQL packages are installed.
  become: yes
  yum:
    name: 
      - postgresql13
      - postgresql13-server
    state: present

- name: Ensure PostgreSQL Python libraries are installed
  become: yes
  yum:
    name: python-psycopg2
    state: present

- name: PostgreSQL folders
  become: yes
  file:
    path: "{{ item.name }}"
    state: directory
    group: postgres
    owner: postgres
    setype: "{{ item.setype }}"
  loop:
    - name: "{{ postgresql_data_dir }}"
      setype: "postgresql_db_t"
    - name: "{{ postgres_log_folder }}"
      setype: "postgresql_log_t"
  register: postgres_folder_structure

- name: SystemD override folder for postgresql-13
  become: yes
  file:
    path: /etc/systemd/system/postgresql-13.service.d
    state: directory

- name: PostgreSQL systemd unit file (override default conf)
  become: yes
  template:
    src: "override.conf"
    dest: /etc/systemd/system/postgresql-13.service.d/override.conf
  register: postgresql_systemd

- name: reload daemon-files if needed
  become: yes
  command: systemctl daemon-reload
  when: postgresql_systemd is changed

- name: Check if PostgreSQL database is initialized.
  become: yes
  become_user: postgres
  stat:
    path: "{{ postgresql_data_dir }}/PG_VERSION"
  register: pgdata_dir_version

- name: Ensure PostgreSQL database is initialized.
  command: "/usr/pgsql-13/bin/postgresql-13-setup initdb postgresql-13"
  when: not pgdata_dir_version.stat.exists
  become: true
  vars:
    ansible_ssh_pipelining: true

- name: copy private keys for PostgreSQL use
  become: yes
  copy: 
    remote_src: yes
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    owner: postgres
    group: postgres
    mode: 0600
  loop:
    - src: "{{ ssl_key_rsa }}"
      dest: "{{ postgresql_data_dir }}/server.key"
    - src: "{{ ssl_cert }}"
      dest: "{{ postgresql_data_dir }}/server.crt"

- name: PostgreSQL conf file
  become: yes
  template:
    src: "postgresql-13.conf"
    dest: "{{ postgresql_data_dir }}/postgresql.conf"
    owner: postgres
    group: postgres
  register: postgresql_conf

- name: restart PostgreSQL if needed
  become: yes
  systemd:
    name: postgresql-13
    state: restarted
  when: postgresql_conf is changed 

- name: Ensure PostgreSQL is started and enabled on boot.
  become: yes
  service:
    name: postgresql-13
    state: started
    enabled: true

- name: create PostgreSQL users
  include_tasks: "{{ role_path }}/../postgresql/tasks/create_user.yml"

- name: create PostgreSQL databases
  include_tasks: "{{ role_path }}/../postgresql/tasks/create_database.yml"

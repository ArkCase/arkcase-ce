- name: snowbound user
  become: yes
  user:
    name: snowbound
    shell: /bin/false
    state: present
    create_home: yes
    home: /home/snowbound

- name: Snowbound folders
  become: yes
  file:
    path: "{{ item }}"
    state: directory
    group: snowbound
    owner: snowbound
  loop:
    - "{{ root_folder }}/data/snowbound"
    - "{{ root_folder }}/log/snowbound"
    - "{{ root_folder }}/app/snowbound"
    - "{{ root_folder }}/install/snowbound"
    - "{{ root_folder }}/tmp/snowbound"
  register: snowbound_folder_structure

- name: enable logrotate for snowbound log folder if necessary
  include_tasks: "{{ role_path }}/../common/tasks/logrotate.yml"
  args:
    apply:
      vars:
        item: snowbound

- include_tasks: "{{ role_path }}/../tomcat/tasks/main.yml"
  args:
    apply:
      vars:
        tc:
          service: snowbound
          user: snowbound
          tomcat_home: "{{ root_folder }}/app/snowbound"
          tls_port: 2005
          shutdown_port: 3005
          jmx_remote_port: 50508
          jmx_rmi_port: 50509
          http_port: 2080
          redirect_port: 2443
          ajp_port: 2009
          catalina_out: "{{ root_folder }}/log/snowbound/catalina.out"
          catalina_temp: "{{ root_folder }}/tmp/snowbound"
          log_folder: "{{ root_folder }}/log/snowbound"          
          java_home: "/usr/lib/jvm/java-1.8.0-openjdk"
  register: snowbound_tomcat_unarchived

- name: download VirtualViewer war file (if using GitHub)
  include_tasks: "{{ role_path }}/../common/tasks/download.yml"
  args:
    apply:
      vars:
        item: 
          name: VirtualViewer war file
          dest: "{{ root_folder }}/tmp/snowbound/snowbound-integration-{{ snowbound_vendor_version }}{{ snowbound_arkcase_version_formatted }}.war"
          owner: snowbound
          url: https://github.com/ArkCase/arkcase-dependencies/raw/master/VirtualViewerJavaHTML5/VirtualViewerJavaHTML5-{{ snowbound_vendor_version }}{{ snowbound_arkcase_version_formatted }}.war
  when: snowbound_retrieve_strategy == "github"
  register: snowbound_war

- name: download VirtualViewer war file (if using sftp)
  become: yes
  become_user: snowbound
  command: sshpass -e sftp -o StrictHostKeyChecking\=no -o UserKnownHostsFile\=/dev/null {{ sftp_arkcase_user }}@{{ sftp_service_base_url }}:{{ sftp_arkcase_folder }}/snowbound-integration-{{ snowbound_vendor_version }}{{ snowbound_arkcase_version_formatted }}.war
  args:
    chdir: "{{ root_folder }}/tmp/snowbound"
  environment:
    SSHPASS: "{{ sftp_arkcase_password }}"
  when: snowbound_retrieve_strategy == "sftp"

- name: copy war file to install folder (this will tell us if it actually changed)
  become: yes
  become_user: snowbound
  copy:
    remote_src: yes
    src: "{{ root_folder }}/tmp/snowbound/snowbound-integration-{{ snowbound_vendor_version }}{{ snowbound_arkcase_version_formatted }}.war"
    dest: "{{ root_folder }}/install/snowbound/snowbound-integration-{{ snowbound_vendor_version }}{{ snowbound_arkcase_version_formatted }}.war"
  register: snowbound_war

- name: expand the WEB-INF/web.xml file
  become: yes
  become_user: snowbound
  command: unzip -o snowbound-integration-{{ snowbound_vendor_version }}{{ snowbound_arkcase_version_formatted }}.war WEB-INF/web.xml
  args:
    warn: no
    chdir: "{{ root_folder }}/install/snowbound"
  when: snowbound_war is changed

- name: fix the WEB-INF/web.xml file
  become: yes
  become_user: snowbound
  replace:
    path: "{{ root_folder }}/install/snowbound/WEB-INF/web.xml"
    regexp: "{{ item.regexp }}"
    replace: "{{ item.replace }}"
  loop:
    - regexp: "https://acm-snowbound:8443"
      replace: "https://{{ snowbound_host }}"
    - regexp: "https://acm-arkcase:8843"
      replace: "https://{{ arkcase_host_name }}:8843"
  register: web_xml
  when: snowbound_war is changed

- name: update snowbound.war with updated web.xml
  become: yes
  become_user: snowbound
  command: zip -r snowbound-integration-{{ snowbound_vendor_version }}{{ snowbound_arkcase_version_formatted }}.war WEB-INF
  args:
    warn: no
    chdir: "{{ root_folder }}/install/snowbound"
  when: web_xml is changed
  
- name: conf/Catalina/localhost folder
  become: yes
  become_user: snowbound
  file:
    path: "{{ root_folder }}/app/snowbound/conf/Catalina/localhost"
    state: directory

- name: snowbound catalina conf file
  become: yes
  become_user: snowbound
  template:
    src: VirtualViewerJavaHTML5.xml
    dest: "{{ root_folder }}/app/snowbound/conf/Catalina/localhost/"
  
- name: snowbound-docs folder
  become: yes
  become_user: snowbound
  file:
    path: "{{ root_folder }}/data/snowbound/snowbound-docs"
    state: directory

- name: link ~/.snowbound-docs to {{ root_folder }}/data/snowbound folder
  become: yes
  become_user: snowbound
  file:
    src: "{{ root_folder }}/data/snowbound/snowbound-docs"
    dest: /home/snowbound/.snowbound-docs
    state: link

- name: copy fonts file
  become: yes
  become_user: snowbound
  copy:
    src: "fonts.tar.gz"
    dest: "{{ root_folder }}/data/snowbound"
  register: fonts_copied
- name: expand fonts file
  become: yes
  become_user: snowbound
  unarchive:
    remote_src: yes
    src: "{{ root_folder }}/data/snowbound/fonts.tar.gz"
    dest: "{{ root_folder }}/data/snowbound"
  when: fonts_copied is changed
- name: update fonts cache
  become: yes
  become_user: snowbound
  shell: fc-cache -f -v
  args: 
    chdir: "{{ root_folder }}/data/snowbound"
  when: fonts_copied is changed
- name: set JAVA_FONTS option
  become: yes
  become_user: snowbound
  lineinfile:
    backup: yes
    path: "{{ root_folder }}/app/snowbound/bin/setenv.sh"
    line: 'export JAVA_FONTS="{{ root_folder }}/data/snowbound/.fonts/"'  

- name: Snowbound systemd unit file
  become: yes
  template:
    src: "snowbound.service"
    dest: /etc/systemd/system/snowbound.service
  register: snowbound_systemd
    
- name: snowbound logrotate
  become: yes
  template:
    src: snowbound
    dest: /etc/logrotate.d/snowbound

- name: enable Snowbound to start on boot
  become: yes
  systemd:
    name: snowbound
    enabled: yes
    masked: no

- name: reload systemctl files
  become: yes
  command: systemctl daemon-reload
  when: snowbound_systemd is changed

- name: Update Snowbound war file
  become: yes
  become_user: snowbound
  copy:
    remote_src: yes
    src: "{{ root_folder }}/install/snowbound/snowbound-integration-{{ snowbound_vendor_version }}{{ snowbound_arkcase_version_formatted }}.war"
    dest: "{{ root_folder }}/app/snowbound/webapps/VirtualViewerJavaHTML5.war"
  register: snowbound_war_copied

- name: start Snowbound
  become: yes
  systemd:
    name: snowbound
    state: restarted
  when: snowbound_war_copied is changed or web_xml is changed


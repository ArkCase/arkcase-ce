#################################
## host-specific settings
#################################
# IP address for Arkcase host. If not defined 127.0.0.1 is used
arkcase_host_address: "172.28.128.1"

email_service_account: "nosuchmailbox@arkcase.com"
email_service_account_escaped: "{{ email_service_account | replace('@', '%40') }}"
email_service_password: "not-a-real-password"

calendar_enabled_for_case_files: false
calendar_purge_option: "RETAIN_INDEFINITELY"
calendar_enabled_for_complaints: false

# external_host: the host name a browser will use
external_host: acm-arkcase
# internal host: the actual host name of the VM
base_domain: acm-arkcase
internal_host: "{{ base_domain }}"

# Whether to enable or disable the local firewall.
#
# If this variable is not set, or set to `true`, the firewall will be
# enabled. To disable the firewall, set this variable to `false`.
enable_firewall: false

activemq_host: "{{ internal_host }}"
alfresco_host: "{{ internal_host }}"
arkcase_host: "arkcase-host"
database_host: "{{ internal_host }}"
mariadb_host: "{{ internal_host }}"
pentaho_host: "{{ internal_host }}"
snowbound_host: "{{ internal_host }}"
solr_host: "{{ internal_host }}"
kafka_host: "{{ internal_host }}"
elasticsearch_host: "{{ internal_host }}"
zipkin_host: "{{ internal_host }}"
schema_registry_host: "{{ internal_host }}"
config_server_host: "{{ internal_host }}"
eureka_host: "{{ internal_host }}"

### Define LDAP Version for the ArkCase service file
### It should be "samba" for development vagrant boxes, where we have the LDAP localy and AWS instances
### If it's a installation with an external LDAP then use "ad"
ldap_type: "samba"

### ensure samba domain is based on the internal_host
samba_domain: "DC.ARKCASE-CE"

# server_admin goes in the httpd conf file, and is the email
# address of the arkcase-admin user
server_admin: "david.miller@arkcase.com"

default_user_password: "AcMd3v$"

# This LDAP information is for the local Samba instance
ldap_host: "{{ internal_host }}"
ldap_protocol: ldaps
ldap_port: 636
ldap_url: "{{ ldap_protocol }}://{{ ldap_host }}:{{ ldap_port }}"
ldap_base: "DC=arkcase-ce"
ldap_bind_user: "CN=Administrator,CN=Users,{{ ldap_base }}"
ldap_bind_password: "{{ default_user_password }}"

# ldap_user_domain is how people will log into
# ArkCase; at the ArkCase login they will login as
# "user@{{ ldap_user_domain }}"
ldap_user_domain: "armedia.com"
# active_directory_domain is of course the AD domain
active_directory_domain: "arkcase-ce"

# The group and user base will be created if necessary
ldap_ancestor_ous:
  - "{{ ldap_base }}"
  - "OU=ArkCase, {{ ldap_base }}"
ldap_group_no_base: "OU=Groups,OU=ArkCase"
ldap_portal_group_no_base: "OU=PortalGroups,OU=ArkCase"
ldap_group_base: "{{ ldap_group_no_base }},{{ ldap_base }}"
ldap_user_no_base: "OU=Users,OU=ArkCase"
ldap_portal_user_no_base: "OU=UsersPortal,OU=ArkCase"
ldap_user_base: "{{ ldap_user_no_base }},{{ ldap_base }}"
ldap_prefix: ""
ldap_core_portal_user_no_base: "OU=CorePortalGroups"
ldap_core_portal_group_no_base: "OU=CorePortalUsers"
ldap_core_portal_user_base: "{{ ldap_core_portal_user_no_base }},{{ ldap_base }}"
ldap_core_portal_group_base: "{{ ldap_core_portal_group_no_base }},{{ ldap_base }}"

# if yes, will reset the password unconditionally.
# otherwise, will set the password only if the user is created (user did not already exist)
ldap_force_password_reset: yes

# used in versions 3.3.3 and up
roles_to_groups_yaml:
  ROLE_ENTITY_ADMINISTRATOR:
  - "{{ ldap_prefix }}ARKCASE_ENTITY_ADMINISTRATOR@{{ ldap_user_domain | upper }}"
  ROLE_CONSUMER:
  - "{{ ldap_prefix }}ARKCASE_CONSUMER@{{ ldap_user_domain | upper }}"
  ROLE_SUPERVISOR:
  - "{{ ldap_prefix }}ARKCASE_SUPERVISOR@{{ ldap_user_domain | upper }}"
  ROLE_ADMINISTRATOR:
  - "{{ ldap_prefix }}ARKCASE_ADMINISTRATOR@{{ ldap_user_domain | upper }}"
  - "{{ ldap_prefix }}ARKCASE_ENTITY_ADMINISTRATOR@{{ ldap_user_domain | upper }}"
  ROLE_EXTERNAL:
  - "{{ ldap_prefix }}ARKCASE_EXTERNAL@{{ ldap_user_domain | upper }}"
  ROLE_BILLING_QUEUE:
  - "{{ ldap_prefix }}APPROVERS@{{ ldap_user_domain | upper}}"
  - "{{ ldap_prefix }}ARKCASE_ADMINISTRATOR@{{ ldap_user_domain | upper }}"
  - "{{ ldap_prefix }}ARKCASE_SUPERVISOR@{{ ldap_user_domain | upper }}"
  - "{{ ldap_prefix }}ARKCASE_CONTRIBUTOR@{{ ldap_user_domain | upper }}"
  - "{{ ldap_prefix }}ARKCASE_CONSUMER@{{ ldap_user_domain | upper }}"
  - "{{ ldap_prefix }}ARKCASE_EXTERNAL@{{ ldap_user_domain | upper }}"
  ROLE_GENERALCOUNSEL_QUEUE:
  - "{{ ldap_prefix }}APPROVERS@{{ ldap_user_domain | upper}}"
  - "{{ ldap_prefix }}ARKCASE_ADMINISTRATOR@{{ ldap_user_domain | upper }}"
  - "{{ ldap_prefix }}ARKCASE_SUPERVISOR@{{ ldap_user_domain | upper }}"
  - "{{ ldap_prefix }}ARKCASE_CONTRIBUTOR@{{ ldap_user_domain | upper }}"
  - "{{ ldap_prefix }}ARKCASE_CONSUMER@{{ ldap_user_domain | upper }}"
  - "{{ ldap_prefix }}ARKCASE_EXTERNAL@{{ ldap_user_domain | upper }}"
  ROLE_RELEASE_QUEUE:
  - "{{ ldap_prefix }}APPROVERS@{{ ldap_user_domain | upper}}"
  - "{{ ldap_prefix }}ARKCASE_ADMINISTRATOR@{{ ldap_user_domain | upper }}"
  - "{{ ldap_prefix }}ARKCASE_SUPERVISOR@{{ ldap_user_domain | upper }}"
  - "{{ ldap_prefix }}ARKCASE_CONTRIBUTOR@{{ ldap_user_domain | upper }}"
  - "{{ ldap_prefix }}ARKCASE_CONSUMER@{{ ldap_user_domain | upper }}"
  - "{{ ldap_prefix }}ARKCASE_EXTERNAL@{{ ldap_user_domain | upper }}"
  ROLE_APPROVE_QUEUE:
  - "{{ ldap_prefix }}APPROVERS@{{ ldap_user_domain | upper}}"
  - "{{ ldap_prefix }}ARKCASE_ADMINISTRATOR@{{ ldap_user_domain | upper }}"
  - "{{ ldap_prefix }}ARKCASE_SUPERVISOR@{{ ldap_user_domain | upper }}"
  - "{{ ldap_prefix }}ARKCASE_CONTRIBUTOR@{{ ldap_user_domain | upper }}"
  - "{{ ldap_prefix }}ARKCASE_CONSUMER@{{ ldap_user_domain | upper }}"
  - "{{ ldap_prefix }}ARKCASE_EXTERNAL@{{ ldap_user_domain | upper }}"
  ROLE_INTAKE_QUEUE:
  - "{{ ldap_prefix }}OFFICERS@{{ ldap_user_domain | upper}}"
  - "{{ ldap_prefix }}ARKCASE_ADMINISTRATOR@{{ ldap_user_domain | upper }}"
  - "{{ ldap_prefix }}ARKCASE_SUPERVISOR@{{ ldap_user_domain | upper }}"
  - "{{ ldap_prefix }}ARKCASE_CONTRIBUTOR@{{ ldap_user_domain | upper }}"
  - "{{ ldap_prefix }}ARKCASE_CONSUMER@{{ ldap_user_domain | upper }}"
  - "{{ ldap_prefix }}ARKCASE_EXTERNAL@{{ ldap_user_domain | upper }}"
  ROLE_HOLD_QUEUE:
  - "{{ ldap_prefix }}APPROVERS@{{ ldap_user_domain | upper}}"
  - "{{ ldap_prefix }}ARKCASE_ADMINISTRATOR@{{ ldap_user_domain | upper }}"
  - "{{ ldap_prefix }}ARKCASE_SUPERVISOR@{{ ldap_user_domain | upper }}"
  - "{{ ldap_prefix }}ARKCASE_CONTRIBUTOR@{{ ldap_user_domain | upper }}"
  - "{{ ldap_prefix }}ARKCASE_CONSUMER@{{ ldap_user_domain | upper }}"
  - "{{ ldap_prefix }}ARKCASE_EXTERNAL@{{ ldap_user_domain | upper }}"
  ROLE_APPEAL_QUEUE:
  - "{{ ldap_prefix }}APPROVERS@{{ ldap_user_domain | upper}}"
  - "{{ ldap_prefix }}ARKCASE_ADMINISTRATOR@{{ ldap_user_domain | upper }}"
  - "{{ ldap_prefix }}ARKCASE_SUPERVISOR@{{ ldap_user_domain | upper }}"
  - "{{ ldap_prefix }}ARKCASE_CONTRIBUTOR@{{ ldap_user_domain | upper }}"
  - "{{ ldap_prefix }}ARKCASE_CONSUMER@{{ ldap_user_domain | upper }}"
  - "{{ ldap_prefix }}ARKCASE_EXTERNAL@{{ ldap_user_domain | upper }}"
  ROLE_FULFILL_QUEUE:
  - "{{ ldap_prefix }}APPROVERS@{{ ldap_user_domain | upper}}"
  - "{{ ldap_prefix }}ARKCASE_ADMINISTRATOR@{{ ldap_user_domain | upper }}"
  - "{{ ldap_prefix }}ARKCASE_SUPERVISOR@{{ ldap_user_domain | upper }}"
  - "{{ ldap_prefix }}ARKCASE_CONTRIBUTOR@{{ ldap_user_domain | upper }}"
  - "{{ ldap_prefix }}ARKCASE_CONSUMER@{{ ldap_user_domain | upper }}"
  - "{{ ldap_prefix }}ARKCASE_EXTERNAL@{{ ldap_user_domain | upper }}"
  ROLE_QUEUE_MASS_ASSIGNMENT:
  - "{{ ldap_prefix }}ARKCASE_ADMINISTRATOR@{{ ldap_user_domain | upper }}"
  - "{{ ldap_prefix }}ARKCASE_SUPERVISOR@{{ ldap_user_domain | upper }}"
  - "{{ ldap_prefix }}ARKCASE_CONTRIBUTOR@{{ ldap_user_domain | upper }}"
  - "{{ ldap_prefix }}ARKCASE_CONSUMER@{{ ldap_user_domain | upper }}"
  - "{{ ldap_prefix }}ARKCASE_EXTERNAL@{{ ldap_user_domain | upper }}"
  ROLE_APPROVER:
  - "{{ ldap_prefix }}APPROVERS@{{ ldap_user_domain | upper }}"
  ROLE_CONTRIBUTOR:
  - "{{ ldap_prefix }}ARKCASE_CONTRIBUTOR@{{ ldap_user_domain | upper }}"
  ROLE_OFFICER:
  - "{{ ldap_prefix }}OFFICERS@{{ ldap_user_domain | upper }}"
  ROLE_PORTAL_ADMINISTRATOR:
  - "{{ ldap_prefix }}ARKCASE_ADMINISTRATOR@{{ ldap_user_domain | upper }}"
  ROLE_PORTAL_USER:
  - "{{ foia_portal_group }}@{{ ldap_user_domain | upper }}"

ldap_groups:
  - description: Entity administrators
    name: "{{ ldap_prefix }}ARKCASE_ENTITY_ADMINISTRATOR"
    alfresco_role: SiteManager
    alfresco_rma_role: Administrator
  - description: Consumers
    name: "{{ ldap_prefix }}ARKCASE_CONSUMER"
    alfresco_role: SiteManager
    alfresco_rma_role: Administrator
  - description: Supervisors
    name: "{{ ldap_prefix }}ARKCASE_SUPERVISOR"
    alfresco_role: SiteManager
    alfresco_rma_role: Administrator
  - description: Administrators
    name: "{{ ldap_prefix }}ARKCASE_ADMINISTRATOR"
    alfresco_role: SiteManager
    alfresco_rma_role: Administrator
  - description: External users
    name: "{{ ldap_prefix }}ARKCASE_EXTERNAL"
    alfresco_role: SiteManager
    alfresco_rma_role: Administrator
  - description: Contributors
    name: "{{ ldap_prefix }}ARKCASE_CONTRIBUTOR"
    alfresco_role: SiteManager
    alfresco_rma_role: Administrator
  - description: Approvers
    name: "{{ ldap_prefix }}APPROVERS"
    alfresco_role: SiteManager
    alfresco_rma_role: Administrator
  - description: Officers
    name: "{{ ldap_prefix }}OFFICERS"
    alfresco_role: SiteManager
    alfresco_rma_role: Administrator

ldap_portal_groups:
  - description: PortalUsers
    name: '{{ foia_portal_group }}'
    alfresco_role: SiteContributor
    alfresco_rma_role: Administrator

ldap_core_portal_groups:
  - description: CorePortalUsers
    name: '{{ core_portal_group }}'
    alfresco_role: SiteContributor
    alfresco_rma_role: Administrator

arkcase_admin_user: "{{ ldap_prefix}}arkcase-admin"
arkcase_admin_name: "ArkCase Administrator"
arkcase_admin_password: "{{ default_user_password }}"
arkcase_admin_group: "CN={{ ldap_prefix }}ARKCASE_ADMINISTRATOR,{{ldap_group_base}}"

ldap_users:
  - user_id: "{{ arkcase_admin_user }}"
    description: ArkCase administrator
    name: "{{ arkcase_admin_name }}"
    mail: "{{ server_admin }}"
    firstName: ArkCase
    lastName: Administrator
    password: "{{ arkcase_admin_password }}"
    groups:
      - "{{ arkcase_admin_group }}"
      - "CN={{ ldap_prefix }}ARKCASE_ENTITY_ADMINISTRATOR,{{ldap_group_base}}"
    nonexpiring_password: yes
  - user_id: "{{ ldap_prefix }}ann-acm"
    description: Ann Smith
    name: Ann Smith
    mail: "ann-acm@armedia.com"
    firstName: Ann
    lastName: Smith
    password: "{{ default_user_password }}"
    groups:
      - "{{ arkcase_admin_group }}"
      - "CN={{ ldap_prefix }}ARKCASE_ENTITY_ADMINISTRATOR,{{ldap_group_base}}"
    nonexpiring_password: yes
  - user_id: "{{ ldap_prefix }}david.miller"
    description: David Miller
    name: David Miller
    mail: "david.miller@arkcase.com"
    firstName: David
    lastName: Miller
    password: "{{ default_user_password }}"
    groups:
      - "{{ arkcase_admin_group }}"
    nonexpiring_password: yes
  - user_id: "{{ ldap_prefix }}matthew.maines"
    description: Matthew Maines
    name: Matthew Maines
    mail: "mmaines@armedia.com"
    firstName: Matthew
    lastName: Maines
    password: "{{ default_user_password }}"
    groups:
      - "{{ arkcase_admin_group }}"
    nonexpiring_password: yes
  - user_id: "{{ ldap_prefix }}sally-acm"
    description: Sally Supervisor
    name: Sally Supervisor
    mail: "sally-acm@armedia.com"
    firstName: Sally
    lastName: Supervisor
    password: "{{ default_user_password }}"
    groups:
      - "CN={{ ldap_prefix }}ARKCASE_SUPERVISOR,{{ldap_group_base}}"
    nonexpiring_password: yes
  - user_id: "{{ ldap_prefix }}samuel-acm"
    description: Samuel Supervisor
    name: Samuel Supervisor
    mail: "samuel-acm@armedia.com"
    firstName: Samuel
    lastName: Supervisor
    password: "{{ default_user_password }}"
    groups:
      - "CN={{ ldap_prefix }}ARKCASE_SUPERVISOR,{{ldap_group_base}}"
    nonexpiring_password: yes
  - user_id: "{{ ldap_prefix }}owen.officer"
    description: Owen Officer
    name: Owen Officer
    mail: "owen.officer@armedia.com"
    firstName: Owen
    lastName: Officer
    password: "{{ default_user_password }}"
    groups:
      - "CN={{ ldap_prefix }}OFFICERS,{{ldap_group_base}}"
    nonexpiring_password: yes
  - user_id: "{{ ldap_prefix }}andy.approver"
    description: Andy Approver
    name: Andy Approver
    mail: "andy.approver@armedia.com"
    firstName: Andy
    lastName: Approver
    password: "{{ default_user_password }}"
    groups:
      - "CN={{ ldap_prefix }}APPROVERS,{{ldap_group_base}}"
    nonexpiring_password: yes

# for each spreadsheet to be udpated, first give the path WITHOUT the .xlsx extension, then give a list of pairs of "string to be replaced", "replacement string"
rules_spreadsheet_updates: []


########################################
### email settings
#######################################
email_host_imap: "relay.armedia.com"
email_port_imap: 143
email_sender_protocol: "smtp"
email_sender_encryption: "none"
email_sender_port: 25
email_allow_attachments: true
email_allow_documents: true
email_allow_hyperlinks: true
email_smtp_host: "relay.armedia.com"
email_user_from: "{{ email_service_account }}"
email_smtp_username: "{{ email_service_account }}"
email_smtp_password: "{{ email_service_password }}"
email_convert_documents_to_pdf: false
create_case_from_email_enabled: false
create_complaint_from_email_enabled: false

# retrieve arkcase from GitHub ("github") or SFTP ("sftp")
arkcase_retrieve_strategy: "sftp"

# core reports, these are always deployed
arkcase_core_reports:
  - path: "arkcase"
    definition: "ComplaintReport.prpt"
  - path: "arkcase"
    definition: "ComplaintDispositionCount.prpt"
  - path: "arkcase"
    definition: "caseSummary.prpt"
  - path: "arkcase-audit"
    definition: "AuditReportWithUrl.prpt"
  - path: "arkcase-audit"
    definition: "AuditReport.prpt"

# arkcase extension
arkcase_extension_install: no
arkcase_extension_version: ""
# extension reports... each different extension may or may not have its own path
# in the jar file where report definitions are stored
arkcase_extension_install_reports: no
arkcase_extension_reports:
  - name: ""
    jar_path: ""
    pentaho_path: ""

foia_portal_context: foia
foia_portal_group: "{{ ldap_prefix }}ARKCASE_PORTAL_USER"
foia_portal_id: "8c41ee4e-49d4-4acb-8bce-866e52de3e4e"
portal_authenticated: true

core_portal_group: "{{ ldap_prefix }}ARKCASE_CORE_PORTAL_USER"

# foia reports
arkcase_foia_reports:
  - path: "foia-audit"
    definition: "AuditReport.prpt"
  - path: "foia"
    definition: "FOIA Log.prpt"

# privacy reports
arkcase_privacy_reports:
  - path: "privacy"
    definition: "SARs-Received Processed and Pending SARs.prpt"

# sftp_arkcase_password, sftp_pentaho_password,
# and sftp_extension_password must be specified as
# extra arguments.
sftp_service_base_url: "fileshare.armedia.com"
sftp_arkcase_user: "arkcase"
sftp_arkcase_folder: "/from-arkcase"
sftp_pentaho_user: "pentaho-ee"
sftp_pentaho_folder: "/from-pentaho-ee"
sftp_alfresco_ee_user: "alfresco-ee"
sftp_alfresco_ee_folder: "/from-alfresco-ee"
sftp_extension_user: ""
sftp_extension_folder: ""
sftp_user: "{{ sftp_extension_user }}"

# retrieve snowbound from GitHub ("github") or SFTP ("sftp")
snowbound_retrieve_strategy: "sftp"
snowbound_vendor_version: "5.6.2"
snowbound_arkcase_version: ""
snowbound_arkcase_version_formatted: "{{ '-' ~ snowbound_arkcase_version if snowbound_arkcase_version != '' else '' }}"
snowbound_symmetric_key: ""

# Mongodb port
mongodb_port: "27017"
mongodb_ssl: false
enable_mongo: true

### default values that shouldn't have to change
arkcase_host_name: "{{ arkcase_host }}"

root_folder: "/opt/arkcase"

mariadb_data_folder: "{{ root_folder }}/data/mariadb"
mariadb_log_folder: "{{ root_folder }}/log/mariadb"

ssl_version: "TLSv1.2"

# ssl_cipher only for backward compatibility
ssl_cipher: "{{ ssl_version }}"

# for the pki role (used by CE installer to create a self-hosted
# PKI), these facts are prescriptive, and the pki role will
# create these files.  For the pki_client role (which creates
# the Java key stores and the ArkCase symmetric key, these
# files are descriptive, and the files must exist.
ssl_key: "/etc/tls/private/arkcase-server.pem"
ssl_ca: "/etc/tls/crt/arkcase-chain.crt"
ssl_cert: "/etc/tls/crt/arkcase-server.crt"

# these files will be created by the installer
ssl_key_rsa: "/etc/tls/private/arkcase-server.rsa.key"
java_trust_store: "{{ root_folder }}/common/arkcase.ts"
java_key_store: "{{ root_folder }}/common/arkcase.ks"
java_key_store_jks: "{{ root_folder }}/common/arkcase-jks.ks"
java_trust_store_pass: "{{ default_user_password }}"
java_key_store_pass: "{{ default_user_password }}"
java_p12_store: "{{ root_folder }}/common/arkcase-client.p12"

samba_version: 4.10.8
samba_realm: "arkcase-ce"
samba_host_ip: "127.0.0.1"
samba_admin_password: "{{ default_user_password }}"
samba_server_role: dc

database_host_name: "{{ database_host }}"
database_server_ssl_cert: "{{ ssl_cert }}"
database_root_password: "{{ default_user_password }}"

database_mysql_jdbc_driver: "org.mariadb.jdbc.Driver"
database_mysql_jdbc_url_option_xml_string: "autoReconnect=true&amp;useUnicode=true&amp;characterEncoding=UTF-8&amp;useSsl=true&amp;requireSsl=true&amp;enabledSslProtocolSuites={{ ssl_cipher }}&amp;trustServerCertificate=false&amp;serverSslCert={{ database_server_ssl_cert }}"
database_mysql_jdbc_url_option_properties_string: "autoReconnect=true&useUnicode=true&characterEncoding=UTF-8&useSsl=true&requireSsl=true&enabledSslProtocolSuites={{ ssl_cipher }}&trustServerCertificate=false&serverSslCert={{ database_server_ssl_cert }}"
# TODO I don't think the below list tables command will work against RDS.
mariadb_list_tables_command: "mysql -uroot --socket={{ mariadb_data_folder }}/mysql.sock SCHEMA -Ns -e 'show tables;'"

database_arkcase_schema: arkcase
database_arkcase_user: arkcase
database_activemq_user: activemq
database_activemq_schema: activemq

## postgresql-specific
postgresql_server_version: 14
postgresql_jdbc_version: "42.3.1"
postgresql_service_file_name: "postgresql-{{ postgresql_server_version }}.service"
# Note, PostgreSQL JDBC driver forces UTF character set internally and you can't set your own.  So no reason to specify characterEncoding here.
postgresql_jdbc_url_option_xml_string: "ssl=true&amp;sslmode=require&amp;sslcert={{ database_server_ssl_cert }}"
postgresql_jdbc_url_option_properties_string: "ssl=true&sslmode=require&sslcert={{ database_server_ssl_cert }}"
postgresql_list_tables_command: "psql -U SCHEMA -h {{ database_host }} -qAntc '\\dt'"

# db_engine: either mariadb or postgresql
db_engine: mariadb
jdbc_driver_class_name: "{{ 'org.postgresql.Driver' if db_engine == 'postgresql' else 'org.mariadb.jdbc.Driver' }}"
jdbc_validation_query: "select 1"
jdbc_driver_jar_filename: "{{ 'postgresql-' + postgresql_jdbc_version + '.jar' if db_engine == 'postgresql' else  'mariadb-java-client-' + mariadb_jdbc_version + '.jar' }}"
database_list_tables_command: "{{ postgresql_list_tables_command if db_engine == 'postgresql' else mariadb_list_tables_command }}"
jdbc_url_xml: "{{ 'jdbc:postgresql://' + database_host + ':5432/SCHEMA?' + postgresql_jdbc_url_option_xml_string if db_engine == 'postgresql' else 'jdbc:mysql://' + database_host_name +':3306/SCHEMA?' + database_mysql_jdbc_url_option_xml_string }}"
jdbc_url_properties: "{{ 'jdbc:postgresql://' + database_host + ':5432/SCHEMA?' + postgresql_jdbc_url_option_properties_string if db_engine == 'postgresql' else 'jdbc:mysql://' + database_host_name +':3306/SCHEMA?' + database_mysql_jdbc_url_option_properties_string }}"
hibernate_dialect: "{{ 'org.hibernate.dialect.PostgreSQLDialect' if db_engine == 'postgresql' else 'org.hibernate.dialect.MySQL5InnoDBDialect' }}"
pentaho_ce_mapping_resource: "{{ 'hibernate/postgresql.hbm.xml' if db_engine == 'postgresql' else 'hibernate/mysql5innodb.hbm.xml' }}"
pentaho_ee_mapping_resource: "{{ 'hibernate/postgresql.EE.hbm.xml' if db_engine == 'postgresql' else 'hibernate/mysql5innodb.EE.hbm.xml' }}"
hibernate_settings: "{{ 'system/hibernate/postgresql.hibernate.cfg.xml' if db_engine == 'postgresql' else 'system/hibernate/mysql5.hibernate.cfg.xml' }}"
# pentaho schema and pentaho databaseType in repository.xml use the same values either postgresql or mysql
pentaho_repository_schema: "{{ 'postgresql'  if db_engine == 'postgresql' else 'mysql' }}"
pentaho_driver_delegate_class: "{{ 'PostgreSQLDelegate' if db_engine == 'postgresql' else 'StdJDBCDelegate' }}"
pentaho_persistance_manager: "{{ 'PostgreSQLPersistenceManager' if db_engine == 'postgresql' else 'MySqlPersistenceManager' }}"
arkcase_db_platform: "{{ 'PostgreSQLPlatform' if db_engine == 'postgresql'  else 'MySQLPlatform' }}"


database_pentaho_hibernate_schema: hibernate
database_pentaho_hibernate_user: hibuser
database_pentaho_quartz_schema: quartz
database_pentaho_quartz_user: pentaho_user
database_pentaho_jackrabbit_schema: jackrabbit
database_pentaho_jackrabbit_user: jcr_user

jmx_password: P@ssw0rd

# for Pentaho EE you must have the Pentaho EE license files
# (NOT included in this repository), and you must have downloaded
# the installer artifacts from Pentaho's support portal and uploaded
# them to an SFTP repository.  Also, run the `pentaho_ee` role instead of
# `pentaho_ce`
pentaho_ee_license_year: 2020
pentaho_major_version: 8.3
pentaho_minor_version: 0.0-371

# make sure to update this checksum if you change pentaho_major_version
pentaho_ce_checksum: "sha1:3a27d54998f5001e0fd4cf843b727b0a127c7867"

pentaho_server_url: "https://{{ external_host }}/arkcase/pentaho"

solr_version: 8.11.2
solr_jmx_enabled: true
# Cores are only needed for Solr before 8.8.2
solr_cores:
  - "acmAdvancedSearch"
  - "acmQuickSearch"

# enable solr cloud and define it's nodes
enable_solr_cloud: true
solr_node_1: "localhost"
solr_node_2: ""
solr_node_3: ""

# NOTE: Alfresco CE 2018-06 does NOT work with
# higher versions of Maria JDBC; specifically it does NOT
# work with 2.4.2.
# Also, Alfresco 6.1 EE is certified with 2.2.5...
# it doesn't work with 2.2.6.
mariadb_jdbc_version: 2.2.5
default_database_password: "@rM3d1A!"

# tomcat_major_version needed to build download URL
tomcat_major_version: 9
tomcat_version: 9.0.82

# use more complicated password for Alfresco admin user before you start with the installation
alfresco_admin_password: "admin"

# Alfresco Community Edition
alfresco_release_name: 201806-GA
alfresco_build_number: "-build-00113"
alfresco_content_services_version: 7.3.0
alfresco_records_management_version: "{{ alfresco_content_services_version }}"

# Alfresco Enterprise Edition
# for Alfresco EE you must have an Alfresco EE license file
# (NOT included in this repository), and you must have downloaded
# the installer artifacts from Alfresco's support portal and uploaded
# them to an SFTP repository.  Also, run the `alfresco_ee` role instead of
# `alfresco_ce`
alfresco_ee_version: 7.3.0.1
alfresco_install_governance_services: no
alfresco_governance_services_version: 3.2.0

# whether to enable sync from alfresco to arkcase
enable_alfresco_sync: true

# whether to add ldap groups to Alfresco sites
alfresco_add_groups_to_sites: false

# Used when we want to upgrade Alfresco to the latest installer version
alfresco_upgrade: false

alfresco_sites:
  - s_title: "ACM"
    s_name: "acm"
    s_description: "ArkCase Collaboration Site"
    s_preset: "site-dashboard"
    s_type: "{http://www.alfresco.org/model/site/1.0}site"
    s_compliance: "{http://www.alfresco.org/model/recordsmanagement/1.0}rmsite"
  - s_title: "Records Management"
    s_name: "rm"
    s_description: "Records Management Site"
    s_preset: "rm-site-dashboard"
    s_type: "{http://www.alfresco.org/model/dod5015/1.0}site"
    s_compliance: "{http://www.alfresco.org/model/dod5015/1.0}site"

records_management_root: "ACM"
records_management_categories:
  - "Case Files"
  - "Complaints"
  - "Document Repositories"
  - "Requests"
  - "Tasks"
  - "Consultations"
  - "SAR"

site_folders:
  - s_name: acm
    content_management_folders:
      - "Case Files"
      - "Complaints"
      - "Document Repositories"
      - "Expenses"
      - "People"
      - "Recycle Bin"
      - "Tasks"
      - "Timesheets"
      - "User Profile"
      - "Business Processes"
      - "Consultations"
      - "Requests"
      - "SAR"

# we don't use this value yet, but maybe it could be used to
# set non-expiring passwords on AD users
# from https://social.technet.microsoft.com/wiki/contents/articles/29480.active-directory-fun-with-maximum-password-age.aspx... just under 30,000 years from now
active_directory_non_expiring_password_age: -9223372036854775808

activemq_version: 5.15.9

# Confluent platform (with default version)
confluent_major_version: 6.2
confluent_minor_version: 8
confluent_scala_version: 2.13

zipkin_version: 2.21.4
# Enable these for Arkcase.NEXT development
enable_elasticsearch: "yes"
enable_kafka: "yes"
enable_zipkin: "yes"
enable_eureka: "yes"

#AWS Credentials
aws_access_key_id: ""
aws_secret_access_key: ""

# Portal OIDC properties (when using Portal OIDC microservice)
oidc_portal_provider: cognito
oidc_portal_access_key: ""
oidc_portal_secret_key: ""
oidc_portal_user_pool: ""
oidc_portal_client_id: ""
oidc_portal_client_secret: ""
oidc_portal_success_login_uri: ""
oidc_portal_authorization_uri: ""
oidc_portal_issuer_uri: ""
oidc_portal_jwk_set_uri: ""
oidc_portal_token_uri: ""
oidc_portal_user_info_url: ""

# OIDC authentication properties when using Core ArkCase OIDC implementation
#oidc_registrationId: ""
#oidc_clientId: ""
#oidc_clientSecret: ""
#oidc_redirectUri: ""
#oidc_authorizationUri: ""
#oidc_tokenUri: ""
#oidc_jwkSetUri: ""
#oidc_issuerUri: ""
#oidc_usernameAttribute: ""
#oidc_userInfoUri: ""
#oidc_scope: ""
# OIDC system user and password are used when Arkcase is making calls to another OIDC environment
#oidc_systemUserEmail: ""
#oidc_systemUserPassword: ""
#oidc_federation_host: ""
#zylab_integration_enabled: false
#zylab_server_host: ""
#zylab_server_port: ""
#zylab_default_mater_template_id: ""
#zylab_registrationId: ""
#zylab_clientId: ""
#zylab_clientSecret: ""
#zylab_tokenUri: ""
#zylab_tenant: ""

#touchnet_username: ""
#touchnet_password: ""
#touchnet_securelinkendpoint: ""
#touchnet_securepaylinkendpoint: ""
#touchnet_upaysiteid: ""

#Put your outlook credentials below if you want to use Email receiver in Arkcase, depending on your case
email_receiver_case_file_account: ""
email_receiver_case_file_account_escaped: "{{ email_receiver_case_file_account | replace('@', '%40') }}"
email_receiver_case_file_password: ""

email_receiver_complaint_account: ""
email_receiver_complaint_account_escaped: "{{ email_receiver_complaint_account | replace('@', '%40') }}"
email_receiver_complaint_password: ""

email_receiver_consultation_account: ""
email_receiver_consultation_account_escaped: "{{ email_receiver_consultation_account | replace('@', '%40') }}"
email_receiver_consultation_password: ""

# specify zookeeper version
zookeeper_version: "3.6.3"

# define username and password for ActiveMQ authentication between apps
activemq_user: ""
activemq_password: ""

# missing fact during vagrant provisioning
arkcase_version: ""

# define arkcase_log_level core/foia with one of thge following valid values: trace, debug, info, warn, error
# if not defined default value will be info
arkcase_log_level: ""

# when defining multiple notifications_groups the flow shoud be
# notifications_groups:
# - group@example.com
# - group1@example.com
notifications_groups:
  - "{{ ldap_prefix }}OFFICERS@{{ ldap_user_domain }}"

# Vault configuration for "conf.yml"
arkcase_vault_host: ""
arkcase_vault_port: ""
arkcase_vault_scheme: ""
arkcase_vault_appRole: ""
arkcase_vault_authMethod: ""
arkcase_vault_username: ""
arkcase_vault_password: ""

# postgresql
postgresql_data_dir: "{{ root_folder }}/data/postgresql/data"
postgres_log_folder: "{{ root_folder }}/log/postgresql"
postgresql_auth_method: "{{ ansible_fips  | ternary('scram-sha-256', 'md5') }}"
postgresql_user: postgres
postgresql_group: postgres
postgresql_unix_socket_folder: /var/run/postgresql

solr_log4j_version: ""

enable_saml_microservice: false
enable_microservices: true
# Extra microservices for extensions. You can add any number of microservices in the list. Example:
#arkcase_extra_microservices:
#  - name: extra-microservice
#    version: "{{ arkcase_version }}"
#    java_opts: "-Dserver.port=9100 -Dspring.cloud.config.uri=https://{{ config_server_host | default(internal_host) }}/config -Dspring.profiles.include=server,runtime -Djava.net.preferIPv4Stack=true -Djavax.net.ssl.trustStorePassword={{ java_trust_store_pass }} -Djavax.net.ssl.keyStore={{ java_key_store }} -Djavax.net.ssl.trustStore={{ java_trust_store}} -Djavax.net.ssl.keyStorePassword={{ java_key_store_pass }} -Dlogging.file.name={{ root_folder }}/log/extra-microservice/extra-microservice.log -Djava.io.tmpdir={{ root_folder }}/data/extra-microservice/tmp"
arkcase_extra_microservices: []

showcase_context: showcase
showcase_version: "{{ arkcase_version }}"
showcase_version_formatted: "{{ '-' ~ showcase_version if showcase_version != '' else '' }}"
deploy_showcase: true

storybook_context: storybook
storybook_version: "{{ arkcase_version }}"
storybook_version_formatted: "{{ '-' ~ storybook_version if storybook_version != '' else '' }}"
deploy_storybook: true

arkcase_portal_context: portal
arkcase_portal_version: "{{ arkcase_version }}"
arkcase_portal_version_formatted: "{{ '-' ~ arkcase_portal_version if arkcase_portal_version != '' else '' }}"
arkcase_portal_extension: core
arkcase_portal_extension_formatted: "{{ '-' ~ arkcase_portal_extension if arkcase_portal_extension != '' else '' }}"
arkcase_portal_group: "{{ ldap_prefix }}ARKCASE_PORTAL_USER@{{ ldap_user_domain | upper }}"
deploy_arkcase_portal: false

open_office_version: "4.1.11"

enable_minio: true
minio_console_port: 8001
file_management_s3_url: "https://{{ external_host }}/api/minio"
file_management_s3_region: "us-east-1"
file_management_s3_access_key: "minioadmin"
file_management_s3_secret_key: "minioadmin"
file_management_s3_buckets:
  - config_name: arkcaseBucket
    bucket_name: arkcase-portal

prc_dockets_s3_bucket_name: prc-rca

microservice_mongodb_host: acm-arkcase
microservice_mongodb_database: arkcase
microservice_mongodb_username: arkcase
microservice_mongodb_password: AcMd3v$

enableSchemaSync: false
enableCaseFileSync: false
enableComplaintSync: false
enablePersonSync: false
enableOrganizationSync: false
enableFileSync: false

user_attribute_name: sAMAccountName

microservice_protocol: http
#For OS where ansible has python3+
ansible_python3: /usr/bin/python3

# Set to true to use the alternative Solr schema, which allows for Solr Highlighting of File Content. 
enable_solr_snippets: false